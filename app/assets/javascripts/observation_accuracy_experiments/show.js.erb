$(function() {
  $(document).on('mousemove', '.bar-rect', function(evt) {
    showTooltip(evt, $(this).data('tooltip-text'));
  });

  $(document).on('mouseout', '.bar-rect', function() {
    hideTooltip();
  });

  var useAltHeight = false;
  function toggleHeight() {
    useAltHeight = !useAltHeight;
    updateRects();

    var axisElement = $('line.dashed-line');
    useAltHeight ? axisElement.hide() : axisElement.show();

    var yTextElements = $('.ytext');
    if(useAltHeight){
      yTextElements.text(function(index, oldText) {
        var newValue = (parseInt(oldText.replace('%', ''), 10) * 10);
        return newValue;
      });
    }else{
      yTextElements.text(function(index, oldText) {
        var newValue = (parseInt(oldText, 10) / 10)+'%';
        return newValue;
      });
    }
  }

  function updateRects() {
    var rects = $('rect');
    rects.each(function() {
      var $this = $(this);
      var height = useAltHeight ? $this.data('altheight')/10 : $this.data('height');
      $this.attr('height', height);

      var classes = $this.attr('class').split(' ');
      var firstClass = classes[0];
      var lastClass = classes[classes.length - 1];
      var correctHeight = useAltHeight ? $('rect.correct.'+lastClass).data('altheight')/10 : $('rect.correct.'+lastClass).data('height');
      var uncertainHeight = useAltHeight ? $('rect.uncertain.'+lastClass).data('altheight')/10: $('rect.uncertain.'+lastClass).data('height');
      var incorrectHeight = useAltHeight ? $('rect.incorrect.'+lastClass).data('altheight')/10 : $('rect.incorrect.'+lastClass).data('height');
      if( firstClass == 'correct' ){
        var y = useAltHeight ? 100 - parseFloat(correctHeight) : parseFloat(incorrectHeight) + parseFloat(uncertainHeight);
      }else if( firstClass == 'uncertain' ){
        var y = useAltHeight ? 100 - parseFloat(correctHeight) - parseFloat(uncertainHeight) : parseFloat(incorrectHeight);
      }else if( firstClass == 'incorrect' ){
        var y = useAltHeight ? 100 - parseFloat(correctHeight) - parseFloat(uncertainHeight) - parseFloat(incorrectHeight) : 0;
      }
      $this.attr('y', y);
      var onmousemove = useAltHeight ? "showTooltip(evt, '"+firstClass+": "+height*10+"');" : "showTooltip(evt, '"+firstClass+": "+height+"%');";
      $this.attr('onmousemove', onmousemove);
    });
  }

  $('.toggle-button').on('click', function() {
    toggleHeight();
  });
});

function showTooltip(evt, text) {
  var tooltip = $("#tooltip");
  tooltip.html(text);
  tooltip.css("display", "block");

  // Calculate the center position of the rectangle
  var rect = evt.target.getBoundingClientRect();
  var centerX = rect.left + rect.width / 2;
  var centerY = rect.top + rect.height / 2;

  // Set the tooltip position
  tooltip.css("position", "fixed");
  tooltip.css("left", centerX + 'px');
  tooltip.css("top", centerY + 'px');
}

function hideTooltip() {
  var tooltip = $("#tooltip");
  tooltip.css("display", "none");
}
