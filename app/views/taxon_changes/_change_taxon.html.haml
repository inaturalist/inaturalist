:ruby
  photo ||= change_taxon.photos.first
  taxon_range ||= change_taxon.taxon_ranges_without_geom.first
  taxon_change ||= nil
  swaps = if @swaps_by_taxon_id
    @swaps_by_taxon_id[change_taxon.id].try(:clone) || []
  else
    change_taxon.taxon_changes.committed.where(:type => "TaxonSwap") +
    change_taxon.taxon_change_taxa.joins(:taxon_change).
      where(taxon_changes: { type: "TaxonSwap" } ).where( "committed_on IS NOT NULL" ).map{|tct| tct.taxon_change}
  end
  if taxon_change
    swaps.delete_if{|swap| swap.id == taxon_change.id}
  end
  show_change_links ||= false
  show_atlas_alert ||= false
  if taxon_framework_relationship = change_taxon.taxon_framework_relationship
    taxon_framework = taxon_framework_relationship.taxon_framework
  else
    taxon_framework = change_taxon.upstream_taxon_framework
  end
- content_for( :extracss ) do
  :css
    .padding {
        padding: 5px;
    }
.change_taxon.clear{"data-taxon-id" => "#{change_taxon.id}", :id => "change_taxon_#{change_taxon.id}"}
  = image_and_content taxon_image(change_taxon), :image_size => 75 do
    = link_to change_taxon, :class => "taxon #{change_taxon.rank}" do
      %span.sciname= change_taxon.name
      = change_taxon.id
    .stacked
      = link_to change_taxon.observations_count, observations_path( taxon_id: change_taxon.id, verifiable: "any", place_id: "any" ), :rel => "nofollow"
      = t :obs
      - unless change_taxon.conservation_status.blank?
        %span.meta |
        = change_taxon.conservation_status_code
      - if taxon_range
        %span.meta |
        = link_to t(:range), taxon_path(change_taxon, :anchor => 'taxon_range')
      - if change_taxon.is_active?
        |
        %span.active= t(:active_taxon_status)
      - else
        |
        %span.inactive= t(:inactive_taxon_status)
      - if change_taxon.flagged?
        |
        %span#flaggings_heads_up.description
          = succeed "." do
            = t :flagged_for_curation
          \#{link_to t(:view_flags), taxon_flags_path(change_taxon), :class => 'readmore', :title => t(:see_something_wrong_with_taxon)}
      - else
        - if logged_in?
          | #{link_to t(:flag_for_curation), new_taxon_flag_path(change_taxon), :id => "flag_this"}
      - if show_atlas_alert && taxon_change && taxon_change.is_a?( TaxonSplit )
        |
        - if change_taxon.atlased?
          = link_to t(:atlased), atlas_path( change_taxon.atlas ), {class: "text-success"}
        - else
          = link_to t(:not_atlased), ( change_taxon.atlas ? atlas_path( change_taxon.atlas ) : new_atlas_path( taxon_id: change_taxon.id) ), {class: "text-danger"}
    .meta
      .small
        - if taxon_framework
          = t( :covered_by_a_taxon_framework_html, 
          link: link_to( t( :covered_by_a_taxon_framework_link, 
          taxon_framework_rank: t( "ranks.#{ taxon_framework.taxon.rank }" ).capitalize,
          taxon_framework_name: taxon_framework.taxon.name ),
          taxonomy_details_for_taxon_path( taxon_framework.taxon ) ) )
          - if taxon_framework.source
            = t( :sourced_to )
            = link_to taxon_framework.source.title, taxon_framework.source.url
            %br
            - if taxon_framework_relationship.nil?
              %p.bg-info.padding
                = t( :relationship_html, link: link_to( t( :unknown ).capitalize, taxonomy_details_for_taxon_path( change_taxon ) ) )
            - else
              %p.padding{ :class => ( ( taxon_framework_relationship.relationship == "match" || taxon_framework_relationship.relationship == "alternate_position" ) ? 'bg-success' : 'bg-warning' ) }
                = t( :relationship_html, 
              link: link_to( ( ( taxon_framework_relationship.relationship == "match" || taxon_framework_relationship.relationship == "alternate_position" ) ? t( "relationships.#{taxon_framework_relationship.relationship}" ).capitalize : t( :deviation ).capitalize ),
              taxonomy_details_for_taxon_path( change_taxon ) ) )
            
    - if show_change_links && taxon_change && @type
      .text-muted
        - input_names = taxon_change.input_taxa.map{|t| "#{t.name} #{t.id}"}
        = link_to "Change your matching #{@type.humanize.downcase} to this taxon",
          taxon_change_commit_records_path(taxon_change.id, @type, change_taxon.id),
          :method => :put,
          :data => { confirm: "Are you sure you want to change all your #{@type.humanize.downcase} of #{commas_and input_names} to #{change_taxon.name} #{change_taxon.id}?", loading_click: t(:updating) },
          :class => "btn btn-default btn-xs"
