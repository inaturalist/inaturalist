<%- i ||= 0 -%>
<%= fields_for observation do |o| %>
  <div class="column span-24 observation stacked">
    <% unless observation.errors.empty? %>
    <%= error_messages_for('observation', :object => observation) %>
    <% end %>
    <div class="column span-7">
      <div class="field species_guess_field">
        <%= o.label :species_guess, t(:what_did_you_see) %>
        <%= o.text_field(:species_guess, :class => 'species_guess text') %>
        <%-
          alt = if observation.taxon
            "<span class='taxon sciname #{observation.taxon.rank} #{Taxon::ICONIC_TAXA_BY_ID[observation.taxon.iconic_taxon_id].try(:name)}'>#{observation.taxon.name}</span>".html_safe
          else
            nil
          end
        -%>
        <%= o.hidden_field(:taxon_id, :alt => alt, :rel => (observation.taxon ? taxon_image_url(observation.taxon) : nil)) %>
        <div class="id_please">
          <%= o.check_box(:id_please) %>
          <%= o.label(:id_please, t(:full_id_please?)) %>
        </div>
      </div>
      
      <!-- <div class="field">
        <%= link_to_function t(:browse_all_species), "$('#taxonchooser').dialog('open')" %>
      </div> -->

      <div class="field">
        <%= o.check_box :captive %>
        <%= o.label :captive, t(:was_it_captive_cultivated?) %>
        <% helptip_for "captive" do %>
          <%=t 'views.observations.captive_help_html' %>
        <% end -%>
      </div>
      
      <div class="field<%= ' error' if observation.errors[:observed_on] && !observation.errors[:observed_on].empty? %>">
        <%= o.label :observed_on_string, t(:when_did_you_see_it?) %>
        <%= o.text_field(:observed_on_string, 
                         :class => 'observed_on_string text') %>
        <%= o.error_message_on(:observed_on) %>
        <%= o.time_zone_select :time_zone, ActiveSupport::TimeZone.us_zones, {}, {:class => 'time_zone'} %>
        <div class="small description">
            <%= t :eg %> "<%= Time.now.to_s(:db) %>" <%= t :yesterday_at %>
        </div>
      </div>
      
      <div class="field">
        <%= o.label(:description, t(:description)) %>
        <%= o.text_area(:description, :class => "text") %>
      </div>
      
      <div class="field">
        <%= o.label :tag_list, t(:tags) %>
        <span class="small description">
          <%=t :comma_separated_please %>
        </span>
        <% helptip_for "tags" do %>
            <%= t :tags_are_a_way %>
        <% end -%>
        <%= o.text_field :tag_list, :class => "text" %>
      </div>
    </div>
    <div class="column span-9">
      <div class="place_guess_field field">
        <%= o.label(:place_guess, raw(t(:where_were_you?))) %>
        <%= o.text_field(:place_guess, :class => 'place_guess text', :placeholder => t(:name_of_the_place_you)) %>
      </div>
      <div id="coordinates_<%= i %>" class="latlonfields status stacked">
        <%= o.label(:latitude, t(:lat), :class => "inlineblock") %>
        <%= o.text_field(:latitude, :class => 'latitude text', "data-tip" => t(:latitude_in_decimals)) %>
        
        <%= o.label(:longitude, t(:long), :class => "inlineblock") %>
        <%= o.text_field(:longitude, :class => 'longitude text', "data-tip" => t(:longitude_in_decimal)) %>

        <span class="button">
          <%= link_to_function(t(:edit),
            "$('#coordinates_#{i}').toggleClass('status').toggleClass('open'); " +
            "$(this).hide(); " + 
            "$(this).next().show(); " + 
            "if ($('#observation_positional_accuracy').val()) {$.fn.latLonSelector.editAccuracy()};" +
            "return false;") %>
          <%= link_to_function(t(:hide), "$('#coordinates_#{i}').toggleClass('status').toggleClass('open'); $(this).hide(); $(this).prev().show(); $.fn.latLonSelector.stopEditAccuracy(); return false;", :style => 'display: none') %>
        </span>
        
        <%= o.hidden_field(:map_scale, :class => 'map_scale') %>
        <%= o.hidden_field(:location_is_exact, :class => 'location_is_exact') %>
        
        <%= o.label(:positional_accuracy, t(:acc), :class => "inlineblock") %>
        <%= o.text_field(:positional_accuracy, :class => 'positional_accuracy text inlineblock', "data-tip" => t(:accuracy_of_the_coordinates)) %>
        <%= o.label(:positional_accuracy, t(:src), :class => "inlineblock", "data-tip" => t(:source_of_coordinates)) %>
        <%= o.text_field(:positioning_method, :class => 'positioning_method text inlineblock', :disabled => true) %>
        <%= o.hidden_field(:positioning_device, :class => 'positioning_device', :disabled => true) %>
      </div>
      <div id="mapcontainer" class="stacked">
        <div id="map"></div>
        <% if observation.latitude.blank? -%>
          <div class="floating dark description">
            <%=raw t :click_the_map %>
          </div>
        <% end -%>
      </div>
      <div id="geoprivacy_<%= i %>" class="geoprivacyfield">
        <label for="observations_<%= i %>_geoprivacy"><%= t :change_geoprivacy %></label>
        <%= o.select :geoprivacy, Observation::GEOPRIVACIES.map{|g| [t(g, :default => g).downcase, g]}, :include_blank => t(:open) %>
        <span class="geoprivacy_tip_target description helptip" rel="#geoprivacy_<%= i %>_tip"></span>
        <div id="geoprivacy_<%= i %>_tip" class="geoprivacy_tip" style="display:none">
          <p><%= t :changing_the_geoprivacy %></p>
          <dl>
            <% for privacy, description in Observation::GEOPRIVACY_DESCRIPTIONS %>
              <dt><%= t(privacy) %></dt>
              <dd><%= t(description) %></dd>
            <% end %>
          </dl>
        </div>
      </div>
    </div>
    <div class="last column span-8">

      <label> <%=t :'sounds.add_media' %></label>

      <div class="ui-tabs">
        <ul>
          <li class="ui-tabs-nav selected"><a href="#add_photos_<%= i %>"><%=t :add_photos %></a></li>
          <li class="ui-tabs-nav"><a href="#add_sounds_<%= i %>"><%=t :'sounds.add_sounds' %></a></li>
        </ul>
        <div id="add_photos_<%= i %>">
          <div id="photos_<%= i %>" class="observation_photos">
            <%-
              # if the photo was invalid, we can't show new local_photos
              photos = if observation.new_record? && !observation.valid?
                observation.photos.reject do |p|
                  p.is_a?(LocalPhoto) && p.new_record?
                end
              else
                observation.observation_photos.map(&:photo)
              end.compact
            -%>
            <%= render :partial => "photos/photo_list_form", :locals => { 
              :photos => photos, 
              :index => i,
              :checked => true,
              :synclink_base => observation.new_record? ? new_observation_path : edit_observation_path(observation),
              :photo_identity => @photo_identities.first,
              :local_photos => @photo_identities.blank? || observation.photos.first && observation.photos.first.is_a?(LocalPhoto)
            } %>
          </div>
          
          <% if @photo_identities.blank? %>
          
            <div class="column-separator"><img src="/images/logo-eee-15px.png"></div>
            
            <p class="ui description">
              <%= raw t :we_also_support %>
            </p>
            
            <div class="clear buttons">
              <%= link_to t(:link_your_flickr_account),
                {:controller => 'flickr', :action => 'options'}, :class => "button" %>
              <%= link_to t(:link_your_picasa_account),
                {:controller => 'picasa', :action => 'options'}, :class => "button" %>
              <%= link_to t(:link_your_facebook_account), "/auth/facebook", :class => "button" %>
            </div>

          <% end %>
          
          <div>
            <% if @photo_identities && @photo_identities.map(&:class).include?(FlickrIdentity) -%>
              <%= link_to_function t(:add_taxonomic_tags_to).html_safe,
                "var flickrPhotoParams = $.map($('#photos_#{i} input[type=checkbox]:checked'), " +
                  "function(inp) {return 'flickr_photos[]='+$(inp).val()}" +
                ").join('&');" +
                "window.open('#{url_for(:controller => 'taxa', :action => 'flickr_tagger')}?" + 
                  "taxon_id='+$('#observations_#{i}_taxon_id').val()+'&'+flickrPhotoParams)" %>
            <% end -%>

            <% unless observation.photos.empty? || observation.new_record? -%>
              <br/>
              <%= link_to t(:re_order_photos).html_safe, edit_observation_photos_path(observation) %>
            <% end -%>
          </div>
        </div>

        <div id="add_sounds_<%= i %>">
          <div id="sounds_<%= i %>" class="observation_sounds">
            <%= render :partial => "sounds/sound_list_form", :locals => { 
              :sounds => observation.sounds, 
              :index => i,
              :checked => true,
              :synclink_base => observation.new_record? ? new_observation_path : edit_observation_path(observation),
              :sound_identity => @sound_identities.first,
            } %>
          </div>
          
          <% if @sound_identities.blank? %>
            <div class="clear buttons">
              <%= link_to t(:'sounds.link_your_soundcloud_account'), "/auth/soundcloud", :class => "button" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>


    <% if @project && !@project.project_observation_fields.blank? -%>
      <fieldset id="projectobservationfields" class="stacked">
        <legend>
          Fields for <%= @project.title %>
          <% helptip_for "observation_fields" do %>
            Extra pieces of data the managers of this project are interested in.
          <% end -%>
        </legend>
        <div class="observation_fields">
          <% @project.project_observation_fields.each do |pof| %>
            <%-
              observation_field_value = o.object.observation_field_values.detect{|ofv| ofv.observation_field_id == pof.observation_field_id}
              observation_field_value ||= ObservationFieldValue.new(:observation_field => pof.observation_field, :observation => o.object)
            -%>
            <%= o.fields_for(:observation_field_values, observation_field_value) do |ofv| %>
              <%= render 'observation_field_row', 
                :builder => ofv, 
                :removable => false, 
                :required => pof.required %>
            <% end -%>
          <% end -%>
        </div>
        <% if @project.project_observation_fields.detect{|pof| pof.required?} -%>
          <div class="required">* <%= t :required %></div>
        <% end -%>
      </fieldset>
    <% end -%>

    <fieldset id="morefields">
      <legend>
        <%= t :more_fields %>
        <% helptip_for "observation_fields" do %>
          <p>
            <%= t :observations_fields_are %>
          </p>

          <p>
            <%=raw t :field_note %>
          </p>
        <% end -%>
      </legend>
      <%= render "observation_field_form_fields", :builder => o %>
    </fieldset>
    
  </div>
<% end %>
