- content_for :extracss do
  = stylesheet_link_tag "users/registrations"
- content_for(:extrajs) do
  = javascript_include_tag "users/registrations"
- content_for( :content ) do
  .flexrow
    - if !@skip_external_connections && @observations && @observations.size > 0
      :ruby
        obs = @observations[rand(@observations.size)]
        photo = obs.observation_photos.sort_by{ |op| op.position || op.id }.first.photo
        place_guess = obs.public_places.select{|p| [Place::COUNTRY_LEVEL, Place::STATE_LEVEL].include?(p.admin_level)}.sort_by(&:admin_level).map{|p|
          p.translated_name
        }.reverse.join( ", " )
        place_guess = obs.place_guess if place_guess.blank?
        taxon_name = if obs.taxon
          render( partial: "shared/taxon", locals: { taxon: obs.taxon, one_name: true } )
        else
          t(:unknown)
        end
      #imgcol.hidden-xs.hidden-sm{ style: "background-image: url('#{photo.large_url}');" }
        .about-observation
          = link_to_user obs.user, style: "background-image: url('#{obs.user.icon.url(:medium)}');", class: "usericon" do
            &nbsp;
          .details
            %div
              =t :taxon_observed_by_html, taxon: taxon_name, url: url_for( obs )
            = link_to_user obs.user, class: "username" do
              = obs.user.published_name
            %div
              = link_to t( :in_place_x, place: place_guess ), observations_url( lat: obs.latitude, lng: obs.longitude )
    - else
      = yield :left
    #formcol
      .inner
        = yield
= render template: "layouts/bootstrap"
