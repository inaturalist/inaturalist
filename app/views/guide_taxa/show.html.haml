= content_for :title do
  = "#{@guide_taxon.display_name} (#{@guide.title})"
= content_for :extracss do
  = stylesheet_link_tag "guide_taxa/show",
                        "//blueimp.github.io/Gallery/css/blueimp-gallery.min.css",
                        "bootstrap-image-gallery.min"
= content_for :extrajs do
  :javascript
    var GUIDE_TAXON = #{@guide_taxon.to_json( only: [:id, :guide_id] ).html_safe}
  = javascript_include_tag "//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js", 
                           "bootstrap-image-gallery.min", 
                           "underscore.min", 
                           "wax.g", 
                           "guide_taxa/show"
.container
  %ol.breadcrumb
    %li
      = link_to t(:guides), guides_path
    %li
      = link_to @guide.title, @guide
    %li.active= @guide_taxon.display_name
  .row.stacked
    .col-xs-12
      - if logged_in?
        .title-controls.pull-right
          .btn-group
            = link_to "#reuse_guide_taxon_dialog", "data-toggle" => "modal", :class => "btn btn-default" do
              %i.fa.fa-copy
              = t(:copy)
            - if @guide.editable_by?(current_user)
              = link_to t(:edit), edit_guide_taxon_path(@guide_taxon), :class => "btn btn-default"
          .btn-group
            - if @prev
              = link_to @prev, :class => "btn btn-default", title: @prev.display_name do
                %i.fa.fa-chevron-left
                = t(:previous_taxon_short)
            - else
              %span.btn.btn-default{disabled: :disabled}
                %i.fa.fa-chevron-left
                = t(:previous_taxon_short)
            - if @next
              = link_to @next, :class => "btn btn-default", title: @next.display_name do
                = t(:next_taxon_short)
                %i.fa.fa-chevron-right
            - else
              %span.btn.btn-default{disabled: :disabled}
                = t(:next_taxon_short)
                %i.fa.fa-chevron-right
      %h2
        - if @guide_taxon.display_name == @guide_taxon.name
          %em= @guide_taxon.name
        - else
          = @guide_taxon.display_name
      - if @guide_taxon.display_name != @guide_taxon.name
        - if @guide_taxon.taxon && @guide_taxon.taxon.name == @guide_taxon.name && @guide_taxon.taxon.rank_level.to_i <= Taxon::GENUS_LEVEL
          %em= @guide_taxon.name
        - else
          = @guide_taxon.name

  #photos.row.stacked
    .col-sm-12
      - for guide_photo in @guide_taxon.guide_photos.sort_by(&:position)
        .inlineblock.guide_photo
          = link_to guide_photo.photo.try_methods(:large_url, :original_url, :medium_url), 
            data: {gallery: true}, 
            title: [guide_photo.description, guide_photo.attribution].reject(&:blank?).join('. ') do
            = image_tag(guide_photo.photo.try_methods(:medium_url, :small_url), :class => "thumb img-rounded")
          .lowerright
            = cite(tag: :small) do
              - if guide_photo.native_page_url.blank?
                = guide_photo.attribution
              - else
                = succeed ',' do
                  = guide_photo.attribution
                = link_to(guide_photo.native_page_url, guide_photo.native_page_url)
  .row
    .col-sm-8
      - for s in @guide_taxon.guide_sections.sort_by{|gt| gt.position.to_i}
        %h3
          = s.title
          = cite do
            - if s.source_url.blank?
              = s.attribution
            - else
              = succeed ',' do
                = s.attribution
              = link_to(s.source_url, s.source_url)
        = formatted_user_text s.description, compact: true
      - unless @guide_taxon.guide_sections.blank? && @guide_taxon.guide_photos.blank?
        %h3=t :sources_and_credits
        = references
      %h3= t(:more_info_title, default: t(:more_info))
      %ul
        - if @guide_taxon.taxon
          %li= link_to t(:site_taxon_page, :site_name => @site.preferred_site_name_short), @guide_taxon.taxon
        - for tl in @taxon_links.sort_by{|tl| tl.site_title.downcase}
          - if @guide_taxon.eol_page_id && tl.url =~ /eol\.org/
            %li= link_to tl.site_title, "http://eol.org/pages/#{@guide_taxon.eol_page_id}"
          - else
            %li= link_to tl.site_title, tl.url_for_taxon(@guide_taxon.taxon)
    .col-sm-4
      - unless @guide_taxon.guide_ranges.blank?
        %h3=t :range_map
        - @guide_taxon.guide_ranges.sort_by(&:position).each do |gr|
          .stacked
            - if gr.medium_url
              = image_tag gr.medium_url, :class => "stacked img-responsive"
            %p.text-muted
              %small
                - if gr.source_url.blank?
                  = gr.attribution
                - else
                  = link_to(gr.attribution, gr.source_url)
      - if @guide_taxon.taxon
        %h3
          = @site.try_methods( :site_name_short, :name )
          =t :map
        :ruby
          a = {
            taxon_layers: [ {
              taxon: @guide_taxon.taxon, 
              ranges: true, 
              observations: true,
              places: { disabled: true },
              gbif: { disabled: true }
            } ],
            place_layers: [ { 
              place: @guide.place
            } ],
            latitude: @guide.latitude, longitude: @guide.longitude,
            map_type: @guide.map_type, zoom_level: @guide.zoom_level
          }
        .taxonmap.stacked{setup_map_tag_attrs(a)}
      - unless @machine_tags.blank?
        %table.table.table-bordered.upstacked
          %tbody
            - for predicate, values in @grouped_machine_tags
              %tr
                %th.text-left= predicate.humanize
                %td= values.join(', ')

#reuse_guide_taxon_dialog.modal.fade
  .modal-dialog{role: 'document'}
    .modal-content
      .modal-header
        %button.close{:type => "button", "data-dismiss" => "modal"} x
        %h4.modal-title=t :copy_guide_taxon_to
        %p= t 'views.guide_taxa.show.reuse_desc'
      .modal-body
      .modal-footer
        %button.btn.btn-default{"data-dismiss" => "modal"}=t :close


/ The Bootstrap Image Gallery lightbox, should be a child element of the document body
#blueimp-gallery.blueimp-gallery.blueimp-gallery-controls
  / The container for the modal slides
  .slides
  / Controls for the borderless lightbox
  %h3.title
  %a.prev ‹
  %a.next ›
  %a.close ×
  %a.play-pause
  %ol.indicator
  / The modal dialog, which will be used to wrap the lightbox content
  .modal.fade
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{"aria-hidden" => "true", :type => "button"} ×
          %h4.modal-title
        .modal-body.next
        .modal-footer
          %button.btn.btn-default.pull-left.prev{:type => "button"}
            %i.glyphicon.glyphicon-chevron-left
            =t :previous_photo_short
          %button.btn.btn-primary.next{:type => "button"}
            =t :next_photo_short
            %i.glyphicon.glyphicon-chevron-right
