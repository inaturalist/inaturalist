- unless @updates.blank?
  %ul.timeline
    - for key, updates in @grouped_updates
      :ruby
        resource_type, resource_id, notification = key
        resource = updates.last.resource
        resource_owner = updates.last.resource_owner
        # Updates that aren't persisted are just filler to show all activity on the resource
        notifying_update = updates.select(&:persisted?).last
        notifier = notifying_update.notifier
        is_mention = ( notification == "mention" )
      %li.observation_multiple_added
        - if notification == "committed"
          .timeline-badge.warning
            %i.glyphicon.glyphicon.glyphicon-random
        - elsif ( notification == "new_observations" && resource.class.name == "Place" )
          .timeline-badge.success
            %i.glyphicon.glyphicon-map-marker
        - else
          .timeline-badge.plain
            = link_to update_image_for( notifying_update ), resource
        - if ["activity","curator_change","invited","created_post"].include? notification
          :ruby
            glytype = case notification
              when "activity" then "bookmark"
              when "curator_change" then "user"
              when "invited" then "send"
              when "created_post" then "pencil"
            end
          .sub-badge
            %i{ class: "glyphicon glyphicon-#{glytype}" }
        .timeline-panel
          .timeline-heading
            %h2.timeline-title
              - if is_mention
                = link_to generic_edit_user_url( anchor: "activity-settings" ), class: "pull-right update-settings", target: "_blank" do
                  %span.glyphicon.glyphicon-cog
              - elsif !is_me?( resource_owner ) && !resource.is_a?( TaxonChange ) && !resource.is_a?( Project )
                = link_to edit_subscription_by_resource_path( resource_type, resource_id ), class: "pull-right update-settings subscriptionsettings" do
                  %span.glyphicon.glyphicon-cog
              %span.time{ title: notifying_update.sort_by_date.iso8601 }
                %i.glyphicon.glyphicon-time
                = compact_date( notifying_update.sort_by_date, obscured: notifier.class.name == "Observation" && !notifier.coordinates_viewable_by?( current_user ) )
              = update_tagline_for( notifying_update, count: updates.size )
          - if notification == "activity" || is_mention
            .timeline-body
              - if updates[0].resource_type == 'Observation'
                - observations = [updates[0].resource]
                = render partial: 'observations/observations_component_for_dashboard', locals: { for_idents: true, observations: observations }
              - target_id = bootstrapTargetID
              .collapse.out{:class => "expand#{target_id}"}
                %ul.timeline.timeline_observation
                  - for u in updates
                    = render partial: "shared/activity_item_for_dashboard", object: u.notifier, locals: { no_thumb: (is_mention && u.notifier.is_a?( Post ) ), no_meta: is_mention, context_around: is_mention ? "@#{ current_user.login }" : nil }
              .collapse.in{:class => "expand#{target_id}"}
                %ul.timeline.timeline_observation
                  = render partial: "shared/activity_item_for_dashboard", object: notifier, locals: { no_thumb: (is_mention && notifier.is_a?( Post ) ), no_meta: is_mention, context_around: is_mention ? "@#{ current_user.login }" : nil }
            .timeline-footer
              = link_to t( "view_#{resource_type.downcase}".to_sym, default: "View" ), resource, class: "btn btn-sm btn-primary"
              - if updates.count > 1
                %button.btn.btn-sm.btn-default.btn_expand.collapsed{ "aria-pressed" => "false", "data-target" => ".expand#{target_id}", "data-toggle" => "collapse", type: "button" }
                  %span.expand_inactive
                    %i.glyphicon.glyphicon-collapse-down
                    = succeed "..." do
                      = t(:show_more)
                  %span.expand_active
                    %i.glyphicon.glyphicon-collapse-up
                    = t(:show_less)
          - else
            - begin
              = render partial: "#{resource_type.underscore.pluralize}/update_#{notification}", object: resource, locals: { updates: updates, resource: resource }
            - rescue ActionView::MissingTemplate, Errno::ENOENT
              = "#{resource_type} #{notification}"
  .pagination
    - unless @pagination_updates.blank? || @pagination_updates.next_page.blank?
      = link_to t(:more), url_for_params( from: @pagination_updates.last.id ), data: { from: @pagination_updates.last.id }, id:"more_pagination", class: "btn btn-sm btn-default"
