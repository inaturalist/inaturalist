<%-
  taxon ||= object || @taxon
  listed_taxon ||=  @listed_taxon
  if listed_taxon
    list ||= @list || listed_taxon.list
    place ||= listed_taxon.place
  end
  # taxon ||= listed_taxon.taxon
  taxon_range ||= TaxonRange.without_geom.first(:conditions => ["taxon_id = ?", taxon])
  map_tag_attrs = setup_map_tag_attrs(taxon, :place => place, :taxon_range => taxon_range)
  obs_url = observations_path(:place_id => listed_taxon.try(:place_id), :taxon_id => taxon.id)
  photos = taxon.taxon_photos.sort_by{|tp| tp.id}.map{|tp| tp.photo}
  dialog_url = listed_taxon_url(listed_taxon) if listed_taxon
-%>
<div class="clear listed_taxon stacked" href="<%= dialog_url %>" data-taxon-id="<%= taxon.id %>">
  <div class="column span-15 headercol">
    <h3>
      <%= render :partial => "shared/taxon", :object => taxon, :locals => {:link_url => url_for(taxon)} %>
    </h3>
  </div>
  <div class="photos column span-9">
    <% if photos.blank? -%>
      <%= render :partial => 'taxa/nophoto', :object => taxon %>
    <% else %>
      <div class="stacked">
        <%= link_to image_tag(photos[0].medium_url), photos[0].becomes(Photo), :class => "zoomable",
          :title => t(:photo_photoid_photoattribution, :photoid => "#{photos[0].id}", :photoattribution => "#{photos[0].attribution}") %>
        <div class="meta">
          Photo: <%= link_to photos.first.attribution, native_url_for_photo(photos.first) %>
        </div>
      </div>
      <% for photo in photos[1..4] %>
        <%= link_to image_tag(photo.square_url), photo.becomes(Photo), :class => "zoomable", :title => t(:photo_photoid_photoattribution, 
        :photoid => "#{photo.id}", :photoattribution => "#{photo.attribution}") %>
      <% end %>
    <% end -%>
  </div>
  
  <%= content_tag :div, '', map_tag_attrs.merge(:class => "last column span-6 map") %>
</div>
