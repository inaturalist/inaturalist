- content_for(:title) do
  = t @place.display_name, :default => @place.display_name
- content_for(:extracss) do
  = stylesheet_link_tag "taxa", "taxa/guide", "barchart", "places/show", "guide"
  /[if lte IE 7]
    <haml_loud> stylesheet_link_tag &#39;observations-ie&#39; </haml_loud>
    <style type="text/css" media="screen">
    \#pageheader { z-index: 100; }
    \.listed_taxon .monthstats { display: none; }
    \#controls button, #controls .button {padding: 2px 5px; margin:0;}
    \#controls button span { line-height: 1.3;}
    </style>
- content_for(:extrahead) do
  %meta{:content => "#{@place.display_name}", :property => "og:title"}/
  - if CONFIG.facebook && !CONFIG.facebook.admin_ids.blank?
    %meta{:content => CONFIG.facebook.admin_ids.join(','), :property => "fb:admins"}
  %meta{:content => "#{t(:learn_about_the_species_live_in) + "#{@place.display_name}"}!", :name => "description", :property => "og:description"}
  %meta{:content => ( @shareable_image_url = @site.logo_square.url ), :property => "og:image"}
  %meta{:content => @shareable_image_url, :property => "twitter:image"}
-
- content_for(:extrajs) do
  = google_maps_js
  :javascript
    var PLACE = #{json_escape @place.to_json.html_safe},
        SHOW_PLACE_GEOMETRY = true,
        WIKIPEDIA_DESCRIPTION_URL = #{url_for(:action => "wikipedia", :id => @place.wikipedia_name).inspect.html_safe},
        FLICKR_API_KEY = #{CONFIG.flickr.key.inspect.html_safe},
        NEARBY_PLACES = #{json_escape @nearby_places.to_json.html_safe},
        INSIDE_PLACES = #{json_escape @inside_places.to_json.html_safe}
  = javascript_include_tag 'map_bundle',
    "jquery/plugins/jquery.infinitescroll.min",
    "taxon_guide", "places/show"
  :javascript
    $(document).ready(function() {
      var script = document.createElement("script")
      script.setAttribute("type", "text/javascript")
      script.setAttribute("src", "#{asset_path('places/show.gmaps.js')}")
      document.body.appendChild(script);
    })
#pageheader
  #searchform.clear.right.buttonrow.smallbuttons
    = render :partial => 'places/search_form', :locals => {:q => ''}
  .breadcrumbs
    %strong= link_to t(:places), places_path, :class => 'crumb'
    %span.description &gt;
    - @place.ancestors.each do |ancestor|
      - link_txt = capture do
        = t("places_name.#{ancestor.name.gsub(' ','_').downcase}", :default => ancestor.name)
        %span.small.description
          (#{t("place_geo.geo_planet_place_types.#{ancestor.place_type_name.gsub(' ','_')}", :default => t(:unknown)) if ancestor.place_type_name})
      = link_to link_txt, ancestor, :class => 'crumb'
      %span.description &gt;
  / /#breadcrumbs
  #map{:class => "#{'nochecklist' unless @place.check_list}"}
  %h2
    = link_to t("places_name.#{@place.display_name.gsub(' ','_').downcase}", :default => @place.display_name), @place
    %span.small.description
      = t("place_geo.geo_planet_place_types.#{@place.place_type_name.gsub(' ','_')}", :default => t(:unknown)) if @place.place_type_name
  #placephotos
#maintabs.clear.stacked
  #metalinks.meta.right
    :ruby
      pieces = []
      pieces << link_to(t(:embed_place_widget), place_widget_path(@place.id), :rel => "nofollow") if @place.check_list
      pieces << link_to(t(:edit_place), edit_place_path(@place), :rel => "nofollow") if @place.editable_by?(current_user)
    = raw pieces.join(' | ')
  %ul
    %li
      %a{:href => "#guidetab"}
        %span= t :species
    %li
      %a{:href => "#observationstab"}
        %span= t(:observations).capitalize
    - unless @projects.blank?
      %li
        %a{:href => "#projectstab"}
          %span= t(:projects).capitalize
    - if @show_leaderboard
      %li
        %a{:href => "#peopletab"}
          %span= t(:people).capitalize
    %li
      %a{:href => "#abouttab"}
        %span= t :about_x, :x => t(@place.name, :default => @place.name)
  #guidetab.stacked
    - if @place.check_list
      - extra = capture do
        %p.ui
          = link_to t(:view_check_list_page), @place.check_list, :class => "readmore"
        - if logged_in?
          - if @place_geometry
            - unless @subscriptions.blank?
              Your subscriptions to this place:
              %ul
                - for subscription in @subscriptions
                  %li{:class => "subscription_for_#{[subscription.resource_type, subscription.resource_id].join('_')}"}
                    - if subscription.taxon
                      = link_to subscription.taxon.name, url_for(subscription.taxon)
                    - else
                      = link_to t(:all_observations), subscription.resource
                    = link_to t(:edit), edit_subscription_path(subscription), :class => "small subscriptionsettings"
            - new_subscription = Subscription.new(:user => current_user, :resource => @place)
            = form_for new_subscription, :html => { |
                :class => "subscribe"               |
              } do |f|                              |
              = f.hidden_field :resource_type
              = f.hidden_field :resource_id
              = f.hidden_field :user_id
              - if @subscriptions.blank?
                = t :subscribe_to_x_from_this_y_html,                                         |
                  :x => commas_and(Place.notifying_associations.keys.map{|k| t(k).downcase}), |
                  :y => t(:place).downcase                                                    |
              - else
                = link_to t(:add_another_subscription), new_subscription_path(:type => "place", :resource_id => @place.id), :id => "new_place_subscription_link", :class => "readmore"
          - else
            .meta
              = t :subscriptions_arent_available_for
      = render :partial => 'guides/guide', :locals => {:extra => extra}
    - else
      .readable.nocontent
        = t :this_place_has_no_check_list
  / end guidetab
  #observationstab
    .stacked.observationcontrols
    .medium.observations.grid
      .nocontent
        = loading t(:loading), :class => "inline"
    = link_to t(:view_more_observations_from) + ' ' + "#{@place.name}", observations_url(:place_id => @place.id), :class => "readmore"
  - unless @projects.blank?
    #projectstab
      .clear
        %h3= t(:projects_in_x, :x => @place.name)
        = render :partial => 'projects/project', :collection => @projects
      = link_to t(:view_all), browse_projects_url(:place_id => @place.slug), :class => "readmore"
  - if @show_leaderboard
    #peopletab
  #abouttab
    .container
      .column.span-8.append-1
        %h3= t(:flickr_photos)
        .stacked.photos
          .loading.status= t(:loading_flickr_photos)
      - wikipedia_url = @wikipedia.url_for_title(@place.wikipedia_name)
      .last.column.span-15
        %h3
          = link_to "Wikipedia", wikipedia_url
          = t(:desription)
        .wikipedia_description
          .loading.status
            = t(:loading_wikipedia_description)
          .noresults.description{:style => "display:none"}
            = t(:there_is_no_wikipedia_page_matching) + " #{@place.wikipedia_name} "+ t(:would_you_like_to)
            = link_to t(:start_one).downcase, wikipedia_url
            ?
/ end maintabs
.clear
.meta.stacked
  - if @place.user
    = t(:place_added_to_inat_by, :site_name => @site.preferred_site_name_short)
    = link_to user_image(@place.user), @place.user
    = link_to you_or_login(@place.user), @place.user
    - date_format = @place.created_at.to_date.to_s(:long).split(" ")
    = t :on_
    = t("date_format.date_long.#{date_format.first.downcase}", :day => date_format[1], :year =>date_format.last)
    |
  = link_to t(:add_new_place), new_place_path, :class => "readmore"

- if @place.source
  .meta
    Source:
    = citation_for @place.source
- if @place.place_geometry_without_geom && @place.place_geometry_without_geom.source
  .meta
    Boundary source:
    = citation_for @place.place_geometry_without_geom.source
