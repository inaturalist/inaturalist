- content_for(:title) do
  = t :editing
  = @place.name
- content_for(:extracss) do
  :css
    #map {width: 100%;height: 500px;}
    .edit_place input.text, .edit_place textarea {width: 415px;}
    .latitude_field input.text, .longitude_field input.text { width: 175px;}
    input.ac_loading {background: white url('/assets/spinner-small.gif') 420px 5px no-repeat;}
- content_for(:extrajs) do
  :javascript
    var PLACE = #{json_escape @place.to_json.html_safe}
    $(document).ready(function() {
      $('#place_parent_id').chooser({
        collectionUrl: '/places/autocomplete.json',
        resourceUrl: '/places/{{id}}.json?partial=autocomplete_item',
        chosen: eval('(' + $('place_parent_id').attr('data-json') + ')')
      })
    } );
  = google_maps_js
  :javascript
    var PLACE = #{json_escape @place.to_json.html_safe},
        SHOW_PLACE_GEOMETRY = true
  = javascript_include_tag 'map_bundle'
  :javascript
    $(document).ready(function() {
      var script = document.createElement("script")
      script.setAttribute("type", "text/javascript")
      script.setAttribute("src", "#{asset_path('places/show.gmaps.js')}")
      document.body.appendChild(script);
    })
#pageheader
  .breadcrumbs
    %strong= link_to "&laquo; #{t(:back_to)} #{@place.name}".html_safe, @place, :class => 'crumb'
  %h2
    = t :editing
    = h @place.name
.column.span-11.append-1
  = form_for @place, :builder => DefaultFormBuilder, :html => {:multipart => true} do |f|
    = error_messages_for :place
    = f.text_field :name, :required => true, :class => 'text'
    = f.text_field :display_name, :class => 'text'
    = f.text_field :code, :class => 'text', :description => t(:short_code_for_this_place)
    = f.check_box :prefers_check_lists, :label_after => true
    .last.column.span-11
      .column.span-5.append-1
        = f.text_field :latitude, :required => true, :class => 'text'
      .last.column.span-5
        = f.text_field :longitude, :required => true, :class => 'text'
    .clear
      .column.span-11
        = f.select :place_type, Place::PLACE_TYPE_CODES.sort.uniq{|k,v| k.downcase}.map{|k,v| [t("place_geo.geo_planet_place_types.#{k.gsub(' ','_')}", :default => k), v]}.sort, |
          :include_blank => t(:unknown), :class => 'select'
    = f.text_field :woeid, :description => "Yahoo Where On Earth ID"
    = f.text_field :parent_id, :placeholder => t(:type_place_name), "data-chooser-chosen" => @place.parent.to_json.html_safe, :label => t(:parent).capitalize

    = link_to_toggle_box t(:replace_boundary_with_kml) do
      .notice=t :places_warning_editing_places_is_slow
      = file_field_tag :file, :accept => "application/vnd.google-earth.kml+xml"
      .meta= t('views.places.kml_field_desc')
    %input{:type => "hidden", :name => "geojson"}
    .clear.buttonrow.upstacked
      = f.submit t(:save), :class => 'default button', "data-loading-click" => t(:saving)
      = link_to t(:cancel), @place, :class => 'button'
      = link_to t(:delete), @place, :method => :delete, |
        :data => {:confirm => t(:are_you_sure_delete_this_place)}, |
        :class => 'minor delete button'                 |
.last.column.span-12
  #map.stacked
  = link_to t(:download_kml), place_geometry_url(@place, :format => "kml")
.column.span-24
  .small.description
    = t(:is_this_place_a_duplicate)
    = link_to t(:merge_it_with_another_place), merge_place_path(@place), :class => 'readmore'
