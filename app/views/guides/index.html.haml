= content_for :title do
  =t :guides
= content_for :extracss do
  = stylesheet_link_tag "guides", "guides/index"
= content_for :extrajs do
  :javascript
    $('#placechooser').chooser({
      collectionUrl: '/places/autocomplete.json',
      resourceUrl: '/places/{{id}}.json?partial=autocomplete_item'
    })
.container
  .notice.box=t "views.guides.index.deprecated_banner"
  #guidesheader.jumbotron.clear{:class => logged_in? ? 'logged_in' : nil}
    %h1= link_to t(:welcome_to_guides, :site_name => @site.name), guides_path
    %p
      =t 'views.guides.index.welcome_message_html'
    .text
      = form_tag search_guides_path, :method => :get, :class => "form-search form-inline" do
        .input-group
          = text_field_tag :q, nil, :placeholder => t(:find_a_guide), :class => "form-control"
          .input-group-btn
            = submit_tag t(:search), :class => "btn btn-primary"
        %nobr
          %span.or
            =t :or
          = link_to t(:create_a_guide), new_guide_path, :class => "btn btn-default"
    - if logged_in?
      %ul.nav.nav-tabs.pull-right
        %li{role: 'presentation', :class => params[:by] == "you" ? "inactive" : "active"}= link_to t(:by_everyone), url_for_params(:without => [:by, :page])
        %li{role: 'presentation', :class => params[:by] != "you" ? "inactive" : "active"}= link_to t(:by_you), url_for_params(:by => "you", :without => [:page])
  .row
    .col-xs-3
      %ul#places.nav.nav-stacked.nav-pills
        %li.nav-header
          - if @place
            .right= link_to t(:all), url_for_params(:without => [:place_id])
          =t :places
        - nav_places = capture do
          - for place in @nav_places
            %li
              = link_to url_for_params(:place_id => place.id, :without => [:page]) do
                %span.badge.right= @nav_places_counts[place.id]
                = place.translated_name
                - if place.place_type_name
                  .text-muted
                    %small= t("place_geo.geo_planet_place_types.#{place.place_type_name.to_s.gsub(' ','_')}", :default => place.place_type_name)
        - if @place
          - subnav_places = capture do
            %li.active
              = link_to url_for_params(:place_id => @place.id, :without => [:page]) do
                %span.badge.right= @nav_places_counts[@place.id]
                =t @place.name, :default => @place.name
              %ul.nav.nav-stacked.nav-pills
                = nav_places
          %li.active.back
            - unless @place == @root_place
              = link_to url_for_params(:place_id => @place.parent_id, :without => [:page]), :class => "prev" do
                =t :back_to
                - if @place.parent
                  =t @place.parent.name, :default => @place.parent.name
                - else
                  = t(:all_places, :default => "all places").downcase
            %ul.nav.nav-stacked.nav-pills
              = subnav_places
        - else
          = nav_places
      %ul#taxonomy.nav.nav-stacked.nav-pills
        %li.nav-header
          - if @taxon
            .right= link_to t(:all), url_for_params(:without => [:taxon_id])
          =t :organisms
        - nav_taxa = capture do
          - for taxon in @nav_taxa
            %li
              = link_to url_for_params(:taxon_id => taxon.id, :without => [:page]) do
                %span.badge.right= @nav_taxa_counts[taxon.id]
                .iconic_taxon_sprite.selected.pull-left{:class => taxon.iconic_taxon_name.to_s.downcase.underscore}
                = render "shared/taxon", :taxon => taxon, :include_parens => false
        - if @taxon && @taxon != Taxon::LIFE
          - subnav_taxa = capture do
            %li.active
              = link_to url_for_params(:taxon_id => @taxon.id, :without => [:page]) do
                %span.badge.right= @nav_taxa_counts[@taxon.id]
                = render "shared/taxon", :taxon_id => @taxon, :include_parens => false
              %ul.nav.nav-stacked.nav-pills
                = nav_taxa
          %li.active.back
            - if @taxon.parent_id == Taxon::LIFE.id
              = link_to url_for_params(:without => [:page, :taxon_id]), :class => "prev" do
                =t :back_to
                = t(:all_life)
            - else
              = link_to url_for_params(:taxon_id => @taxon.parent_id, :without => [:page]), :class => "prev" do
                =t :back_to
                = render "shared/taxon", :taxon => @taxon.parent, :include_parens => false
            %ul.nav.nav-stacked.nav-pills
              = subnav_taxa
        - else
          = nav_taxa
    .col-xs-9
      - for row in @guides.in_groups_of(2)
        .row.stacked
          - for guide in row.compact
            .col-xs-6
              = render 'media_object', :guide => guide, :img_class => "col-xs-4"
  #guides-funding.quiet.box.text-center.upstacked
    =t 'views.guides.index.funding_html'
