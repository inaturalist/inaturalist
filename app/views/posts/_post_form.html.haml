- post ||= @post
- observations ||= @observations || @post.observations
- content_for(:extrajs) do
  = javascript_include_tag 'jquery/plugins/jquery.labelize', |
    "jquery/plugins/inat/observation_selectors"              |
  - unless post.parent_type == 'Project'
    :javascript
      var OBSERVATION_IDS = #{@post.observation_ids.join(',').inspect.html_safe},
          CURRENT_USER_ID = #{current_user.id};
      $(document).ready(function() {
        $('#observation_selector').observationSelector({
          urlParams: {
            authenticity_token: encodeURIComponent($('meta[name=csrf-token]').attr('content')),
            include: OBSERVATION_IDS,
            user_id: CURRENT_USER_ID
          }
        });
      });
- content_for(:extracss) do
  :css
    a.button.nextlink {float: right;}
= form_for(post, :builder => BootstrapFormBuilder, :html => {:class => 'post_form'}) do |f|
  .row
    .col-md-7
      = error_messages_for :post
      = f.text_field :title
      = f.text_area :body, rows: 20
      .stacked
        = f.form_field :formatting, label: t(:formatting), :class => "inline" do
          %label.radio-inline{ title: t( "views.posts.formatting_simple_help" ) }
            = radio_button_tag "post[preferred_formatting]", Post::FORMATTING_SIMPLE, post.preferred_formatting == Post::FORMATTING_SIMPLE
            = t( Post::FORMATTING_SIMPLE )
          %label.radio-inline{ title: t( "views.posts.formatting_none_help" ) }
            = radio_button_tag "post[preferred_formatting]", Post::FORMATTING_NONE, post.preferred_formatting == Post::FORMATTING_NONE
            = t( Post::FORMATTING_NONE )
        .stacked.small.meta
          %strong
            = t :allowed_html
            \:
          = Post::ALLOWED_TAGS.to_a.sort.join(', ')
      .stacked
        = f.check_box :prefers_no_comments, label: t(:disable_comments), description: t(:disable_comments_desc)
      = f.hidden_field :user_id
      = f.hidden_field :parent_id
      = f.hidden_field :parent_type
      .actions
        - if post.published_at
          = f.submit t(:save), :id => 'post_save', :class => 'btn btn-primary'
          = f.submit t(:unpublish), :class => 'btn btn-default'
        - else
          = f.submit t(:save_draft), :id => 'post_save', :class => 'btn btn-default'
          = f.submit t(:publish), :class => 'btn btn-primary'
        - if post.new_record?
          = link_to t(:cancel), journal_by_login_path(post.user.login), :class => 'btn btn-link'
        - else
          = f.submit t(:preview), :id => 'post_preview', :class => 'btn btn-default' unless post.new_record?
          .pull-right
            = link_to t(:delete), post_path(post), 
              :data => {:confirm => t(:are_you_sure_delete_post)}, 
              :method => :delete, 
              :id => "delete_post_button", 
              :class => "minor delete btn btn-default"
    - unless post.parent_type == 'Project'
      .col-md-5
        .field
          %label= t(:observations)
          .description
            = t(:you_can_choose_observations_associated)
        #observation_selector.observations.table
          = render :partial => "observations/selector", :locals => { :observations => observations, :check_box_checked => true }
