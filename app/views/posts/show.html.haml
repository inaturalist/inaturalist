- content_for(:title) do
  = t(:x_journal_middot, user: @parent.journal_display_name).html_safe
  = @title = @post.title
- content_for(:extracss) do
  = stylesheet_link_tag "lists", "posts/show"
  :css
- content_for(:extrajs) do
  = google_maps_js
  = javascript_include_tag 'inaturalist',      |
    'map_bundle'                               |
  %script{:charset => "utf-8", :type => "text/javascript"}
    $(document).ready(function() {
      if ($('#map').length > 0) {
        window.map = iNaturalist.Map.createMap({lat: 40.714, lng: -98.262, zoom: 3})
        var observations = #{json_escape @observations.to_json(:include => { :user => { :only => :login }, :taxon => {}, :iconic_taxon => {} }).html_safe}
        map.addObservations(observations)
        map.zoomToObservations()
        $('#map').hide()
      }
      $("#comment_body").textcompleteUsers( );
    })
- content_for :extrahead do
  %meta{:property => "og:image", :content => html_attributize(@shareable_image_url)}
  %meta{:property => "twitter:image", :content => html_attributize(@shareable_image_url)}
  %meta{:property => "og:description", :content => html_attributize(@shareable_description)}
  %meta{:name => "twitter:card", :content => "summary"}
  %meta{:name => "og:title", :content => html_attributize(@title)}
.container
  .row
    #pageheader.col-md-12
      = render :partial => 'posts/breadcrumbs'
      - if @parent.is_a?(Project)
        = render :partial => 'shared/prevnext', :locals => {                                  |
            :prev_item => @previous,                                                          |
            :prev_url => @previous ? project_journal_post_path(@parent.journal_slug, @previous) : '', |
            :next_item => @next,                                                              |
            :next_url => @next ? project_journal_post_path(@parent.journal_slug, @next) : ''          |
          }
      - elsif @parent.is_a?( Site )
        = render partial: 'shared/prevnext', locals: {
            :prev_item => @previous,
            :prev_url => @previous ? site_post_path(@previous) : '',
            :next_item => @next,
            :next_url => @next ? site_post_path(@next) : ''
          }
      - else
        = render :partial => 'shared/prevnext', :locals => {                                  |
            :prev_item => @previous,                                                          |
            :prev_url => @previous ? journal_post_path(@previous.user.login, @previous) : '', |
            :next_item => @next,                                                              |
            :next_url => @next ? journal_post_path(@next.user.login, @next) : ''              |
          }                                                                                   |
      %h2
        - if @post.published_at
          %span.meta.date= l @post.published_at
        = @post.title
      - if (@parent.is_a?(Project) && logged_in? && @display_project.editable_by?(current_user))
        #tools.buttonrow
          = link_to t(:edit), edit_project_journal_post_path(project_id: @parent.journal_slug, id: @post.id), |
            :id => "edit_post_button", :class => "button"                                                   |
          -#
          = link_to t(:delete), delete_project_journal_post_path(@parent, @post), |
            :data => {:confirm => t(:are_you_sure_delete_post)},                  |
            :method => :delete,                                                   |
            :id => "delete_post_button",                                          |
            :class => "minor delete button"                                       |
      - elsif logged_in? && current_user.id == @post.user_id
        #tools.buttonrow
          = link_to t(:edit), edit_journal_post_path(login: @parent.journal_slug, id: @post.id), |
            id: "edit_post_button", class: "button"                                      |
          -#
          = link_to t(:delete), post_path(@post),                      |
            :data => {:confirm => t(:are_you_sure_you_want_to_delete_this_post)}, |
            :method => :delete,                                        |
            :id => "delete_post_button",                               |
            :class => "minor delete button"                            |
  .row
    .col-md-8
      .post
        = formatted_user_text(@post.body, scrubber: PostScrubber.new(tags: Post::ALLOWED_TAGS, attributes: Post::ALLOWED_ATTRIBUTES), skip_simple_format: (post.preferred_formatting == Post::FORMATTING_NONE))
      #postmeta.description
        = render "posts/attribution", post: @post
      = separator
      #comments
        - if @post.published_at
          = render "comments/comments", parent: @post, hide_form: @post.prefers_no_comments?
        - else
          = render "comments/comments", parent: @post, hide_form: true
    #sidecol.col-md-4
      - if !@observations.blank?
        %h3= t(:observations)
        .tabs
          %ul
            %li= link_to_function t(:details), "$(this).parents('ul').find('a').removeClass('selected'); $(this).addClass('selected'); $('#map').hide(); $('#observations').show().addClass('mini').removeClass('names')", :class => 'selected'
            %li= link_to_function t(:names),   "$(this).parents('ul').find('a').removeClass('selected'); $(this).addClass('selected'); $('#map').hide(); $('#observations').show().addClass('names')"
            %li= link_to_function t(:map),     "$(this).parents('ul').find('a').removeClass('selected'); $(this).addClass('selected'); $('#map').toggle(); google.maps.event.trigger(map, 'resize'); map.zoomToObservations(); $('#observations').toggle();"
        - visible_obs_count = (@post.body.size / 300.0).ceil.to_i
        - visible_obs_count = 3 unless visible_obs_count > 3
        #observations.mini.observations
          = render(:partial => 'observations/cached_component',   |
            :collection => @observations[0..visible_obs_count-1]) |
          - if visible_obs_count < @observations.size
            #more_observations{:style => "display: none"}
              = render(:partial => 'observations/cached_component',  |
                :collection => @observations[visible_obs_count..-1]) |
            = link_to_function t(:view_all_observations, :observation => "#{@observations.size}"), "$('#more_observations').slideToggle(); $(this).toggleClass('open')", :class => 'toggle_button'
        #map
