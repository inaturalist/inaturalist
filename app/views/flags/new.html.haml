- content_for :title do
  = @title = "#{t :new_flag_for} #{@object.to_plain_s}"
- content_for :extrajs do
  :javascript
    $( function ( ) {
      $( "#flag_initial_comment_body" ).textcompleteUsers( );
    } );

.container
  .row
    .col-xs-12
      %ol.breadcrumb
        %li
          = link_to t(:back_to_x, noun: @object.try_methods( :to_plain_s, :to_s ) ), @object, class: "back crumb"
      %h2
        = t :new_flag_for
        = link_to @object.to_plain_s, @object
      %p.text-muted= t :flag_description

      = form_for( [@object,  @flag] ) do |f|
        .form-group
          = f.label :reason do
            &ldquo;#{raw( t(:flag_reason2, :record => @model.name.downcase) )}...&rdquo;
          = f.text_field :flag, required: true, class: "form-control", maxlength: 255
        .form-group
          = f.label t( :comment )
          %p.text-muted= t :flag_comment_description
          -if @model.name.downcase == "taxon"
            %p.text-muted= t :flag_comment_taxon_description
          = f.text_area :initial_comment_body, class: "form-control", maxlength: Comment::MAX_LENGTH
        = f.hidden_field :user_id, value: current_user.id
        = f.hidden_field :flaggable_id, value: @object.id
        = f.hidden_field :flaggable_type, value: @model.name
        .form-group
          = f.submit t( :flag_it! ), class: "btn btn-primary"
  .row
    .col-xs-12
      = render "flag_list", flags: @flags
