<%- content_for(:extracss) do -%>
  <%= stylesheet_link_tag "jquery/plugins/jquery.autocomplete.css" %>
  <style type="text/css" media="screen">
    .title_field,.description_field,.project_type_field{margin-right:20px;}
    .description_field,
    .terms_field,
    .title_field, 
    .preference_fields, 
    .project_type_field{float:left;width:465px;}
    .project_icon_field{float:left;width:225px;}
    .description_field,.project_type_field{clear:left;}
    .title_field input{width:390px;}
    .description_field textarea,.terms_field textarea{width:450px;}
    #place_q,#taxon_q{width:300px;}
    .observationrules{clear:left;}
    .project_observation_fields {list-style: none;margin-left:0;}
    .new_observation_field .field {width:auto;}
    li.project_observation_field {position: relative; margin-left:0; padding-left: 20px; cursor: move;}
    .project_observation_field .title {font-weight:bold;}
    .project_observation_field .ui-icon {position:absolute; left: 0;top: 0;}
    .sortabletarget { height: 100px; border: 2px dashed #ccc;}
  </style>
<%- end -%>
<%= javascript_include_tag "observations/observation_fields" %>
<%- content_for(:extrajs) do -%>
  <script type="text/javascript" charset="utf-8">
    function rulify() {
      $('#new_operand_id').chooser({
        collectionUrl: 'http://'+window.location.host + '/places/autocomplete.json?with_geom=t',
        resourceUrl: 'http://'+window.location.host + '/places/{{id}}.json?partial=autocomplete_item',
        chosen: eval('(' + $('new_operand_id').attr('data-json') + ')'),
        afterSelect: function(item) {
          $('#new_operand_type').val("Place")
        },
        afterClear: function() {
          $('#new_operand_type').val('')
        }
      })
      
      $('#taxon_q').simpleTaxonSelector({
        taxonIDField: $('#new_operand_id'),
        afterSelect: function() {
          $('#new_operand_type').val("Taxon")
        },
        afterUnselect: function() {
          $('#new_operand_type').val('')
        }
      })
      $('#taxon_selector').hide()
      
      $('.observationrules .togglelink').click()
      
      $('.operator_field select').change(function() {
        if ($(this).val() == 'observed_in_place?') {
          $('#place_selector').show()
        } else {
          $('#place_selector').hide()
        }
        if ($(this).val() == 'in_taxon?') {
          $('#taxon_selector').show()
        } else {
          $('#taxon_selector').hide()
        }
      })
      $('.operator_field select').change()
    }

    function newProjectObservationField(markup) {
      var currentField = $('.observation_field_chooser').chooser('selected')
      if (!currentField || typeof(currentField) == 'undefined') {
        alert('Please choose a field type')
        return
      }
      if ($('#observation_field_'+currentField.recordId).length > 0) {
        alert('You already have a field for that type')
        return
      }
      
      $('.project_observation_fields').append(markup)
      fieldify({observationField: currentField})
    }

    function fieldify(options) {
      options = options || {}
      $('.project_observation_field').not('.fieldified').each(function() {
        var lastName = $('.project_observation_field.fieldified:last input').attr('name')
        if (lastName) {
          var index = parseInt(lastName.match(/project_observation_fields_attributes\]\[(\d+)\]/)[1]) + 1
        } else {
          var index = 0
        }
        
        $(this).addClass('fieldified')
        var input = $('.ofv_input input.text', this)
        var currentField = options.observationField || $.parseJSON($(this).attr('data-json'))
        if (!currentField) return
        currentField.recordId = currentField.recordId || currentField.id
        
        $(this).attr('id', 'observation_field_'+currentField.recordId)
        $('.title', this).html(currentField.name)
        if (currentField.allowed_values && currentField.allowed_values.length > 0) {
          $('.allowed span', this).html(currentField.allowed_values)
          $('.allowed', this).show()
        } else {
          $('.allowed', this).hide()
        }
        $('.description', this).html(currentField.description)
        $('.editlink', this).attr('href', '/observation_fields/'+currentField.id+'/edit')
        $('input[name*="observation_field_id"]', this).val(currentField.recordId)
        $('input', this).each(function() {
          var newName = $(this).attr('name')
            .replace(
              /project_observation_fields_attributes\]\[(\d+)\]/, 
              'project_observation_fields_attributes]['+index+']')
          $(this).attr('name', newName)
        })
      })
      updateProjectObservationFieldPositions()
    }

    function updateProjectObservationFieldPositions() {
      $('.project_observation_fields li').each(function() {
        $('input[name*="position"]', this).val($('li', $(this).parent()).index(this))
      })
    }

    $(document).ready(function() {
      $('.observation_field_chooser').chooser({
        collectionUrl: 'http://'+window.location.host + '/observation_fields.json',
        resourceUrl: 'http://'+window.location.host + '/observation_fields/{{id}}.json',
        afterSelect: function(item) {
          $('.observation_field_chooser').parents('.ui-chooser:first').next('.button').click()
          $('.observation_field_chooser').chooser('clear')
        }
      })
      $('#createfieldbutton').click(ObservationFields.newObservationFieldButtonHandler)
      fieldify()
      $('.project_observation_fields').sortable({
        placeholder: 'sortabletarget',
        update: function(event, ui) {
          updateProjectObservationFieldPositions()
        }
      })
    })
  </script>
<%- end -%>
<%- project ||= @project -%>
<%= form_for project, :builder => DefaultFormBuilder, :html => {:multipart => true} do |f| %>
  <%= f.error_messages %>
  
  <%= f.text_field :title, :required => true %>
  
  <%= f.form_field :project_icon, :wrapper => {:class => 'clear'} do %>
    <% if project.icon.file? -%>
      <%= image_tag(project.icon.url(:thumb), :class => "left") %>
      <div>
        <%= check_box_tag :icon_delete %>
        <label for="icon_delete">Delete icon?</label>
      </div>
      <%= link_to_toggle "Change icon", "#iconfield" %>
      <div id="iconfield" style="display: none">
        <%= f.file_field :icon, :label => false %>
      </div>
    <% else %>
      <%= f.file_field :icon, :label => false, :size => 20 %>
    <% end -%>
  <% end %>
  
  <%= f.text_area :description, :description => "Describe the purpose of this project." %>
  <%= f.text_area :terms, :description => "Terms new users must agree to before joining this project." %>
  
  <%= f.select :project_type, Project::PROJECT_TYPES, {:include_blank => "normal"},
    :description => "'Contest' projects will display a leader board ranking contributors by the number of unique species observed while 'Observation Contest' projects display leader boards ranking contributors by the number of observations" %>
  
  <div class="preference_fields">
    <%= f.check_box :prefers_count_from_list, 
      :label => "Show total listed taxa", 
      :label_after => true,
      :description => 
        "Show the total number of taxa on the project's list alongside " + 
        "the number of taxa observed." %>
    <%= f.check_box :prefers_place_boundary_visible, 
      :label => "Show place boundary on map", 
      :label_after => true,
      :description => 
        "If you have an observation rule specifying a place (see below), " + 
        "you can show the boundary of that place on your project page, if " + 
        "the place has a boundary." %>
  </div>
  
  <!-- <fieldset class="userrules">
    <legend>New User Rules</legend>
    
    <%= f.fields_for :project_user_rules do |pu| %>
      <div>
        <%= pu.select :operator, ProjectUser::RULE_METHODS, :include_blank => "Choose a rule" %>
        <%= pu.hidden_field :_destroy, :class => "destroyer" %>
        <%= link_to_function "remove", "$(this).parent().fadeTo('fast', 0.5); $(this).parent().find('.destroyer').val(true)" %>
      </div>
    <% end %>
    <%= f.fields_for :project_user_rules, [Rule.new] do |pu| %>
      <div>
        <%= pu.select :operator, ProjectUser::RULE_METHODS, :include_blank => "Choose a rule" %>
        <%= link_to_function "add another", "$(this).parent().clone().appendTo($(this).parents('fieldset'))" %>
      </div>
    <% end %>
  </fieldset> -->
  
  <fieldset class="observationrules">
    <legend>New Observation Rules</legend>
    <p class="description">
      You can choose rules to determine what observations can be added to this
      project, like limiting observations to a certain place. Note: limiting
      to places currently relies on <%= CONFIG.site_name_short %> Places, and can only limit
      observations to the smallest rectangle that surrounds a place.
    </p>
    
    <ul>
      <%= f.fields_for :project_observation_rules do |por| %>
        <li>
          <%= por.object.terms %>
          <%= por.hidden_field :_destroy, :class => "destroyer" %>
          <%= link_to_function "remove", 
            "$(this).parent().fadeTo('fast', 0.5).css('text-decoration', 'line-through');" + 
            "$(this).parent().find('.destroyer').val(true)" %>
        </li>
      <% end %>
    </ul>
    
    <%- new_rule_field = capture do %>
      <fieldset id="new_project_observation_rule">
        <%= f.fields_for :project_observation_rules, [Rule.new] do |pu| %>
          <%= pu.select :operator, ProjectObservation::RULE_METHODS.map{|m| [m.to_s.humanize.gsub('?', '').downcase, m]}, 
            :include_blank => "Choose a rule",
            :label => "Rule: must be..." %>
          <%= pu.hidden_field :operand_type, :id => "new_operand_type" %>
          <div id="place_selector">
            <%= pu.text_field :operand_id, :id => "new_operand_id", :placeholder => "Type place name", :label => "Choose a place" %>
            <span class="description">
              Place must have a boundary defined. Not finding the place you want?
              <%= link_to "Make a new place", new_place_path, :class => "readmore", :target => "_blank" %>
            </span>
          </div>
          <div id="taxon_selector">
            <label for="taxon_q">Choose a taxon</label><br/>
            <input type="text" name="taxon_q" value="" id="taxon_q" class="text">
          </div>
        <% end %>
        <%= link_to_function "remove", "$(this).parent().next('a').show();$(this).parent().remove() " %>
      </fieldset>
    <% end -%>
    <%= link_to_function "add a new rule", "$(this).before('#{escape_javascript new_rule_field}'); rulify(); $(this).hide()" %>
  </fieldset>
  
  <%= f.text_field :tracking_codes, :description => 
    "Comma-separated list of tracking codes. Add these if you want to " + 
    "append a tracking code when sending people to the new observation form, " + 
    "e.g. #{root_url}observations/new?project_id=#{@project.id}&tracking_code=yourcode123. " + 
    "You can use this to track participation from different sources. " + 
    "You can access these codes when downloading your project's observations as CSV." %>
  
  <% if current_user.is_admin? && !@project.new_record? -%>
    <fieldset id="project_assets" class="admin">
      <legend>Project Assets</legend>
      
      <ul>
        <% for project_asset in @project.project_assets %>
        <li>
          <%= link_to project_asset.asset.url, project_asset.asset.url %>
          <small style="margin-left: 10px">
            <%= link_to "edit", edit_project_asset_path(project_asset) %>
            <%= link_to "delete", project_asset, :method => :delete, :confirm => "Are you sure you want to delete this asset?", 
              :class => 'description' %>
          </small>
        </li>
        <% end %>
      </ul>
      
      <%= link_to "Add asset", new_project_asset_path(:project_id => @project.id), :class => "readmore" %>
    </fieldset>
    
    <fieldset id="custom_project_fields" class="admin">
      <legend>Custom Project Fields</legend>
      
      <% if @project.custom_project -%>
        <%= link_to "Edit custom project fields", edit_custom_project_path(@project.custom_project), :class => "readmore" %>
      <% else %>
        <%= link_to "Add custom project fields", new_custom_project_path(:project_id => @project.id), :class => "readmore" %>
      <% end -%>
    </fieldset>
    
    <fieldset class="admin">
      <legend>Extra Properties</legend>
      
      <%= f.check_box :featured_at, 
        :label => "Feature this project?", 
        :label_after => true %>
        
      <%= f.text_field :source_url, :description => "URL / identifier of a project derived from some external resource" %>
    </fieldset>
  <% end -%>

  <fieldset>
    <legend>Observation fields</legend>
    <p class="description">
      Suggest or require that contributors fill out these fields for the observations they add to your project.
    </p>

    <ul class="project_observation_fields">
      <%= f.fields_for :project_observation_fields do |pof| %>
        <%= render 'project_observation_field_row', :builder => pof %>
      <% end -%>
    </ul>
    <div>
      <%- new_pof_fields = capture do %>
        <%= f.fields_for :project_observation_fields, f.object.project_observation_fields.build do |pof| %>
          <%= render 'project_observation_field_row', :builder => pof %>
        <% end -%>
      <% end -%>
      <div class="inline buttonrow">
        <label>Add a field</label>
        <input name="observation_field" 
               class="observation_field_chooser" 
               type="text" 
               placeholder="Start typing field name..."
               data-chooser-default-sources="<%= @observation_fields.to_json %>">
        <%= link_to_function "Add a field", "newProjectObservationField('#{escape_javascript(new_pof_fields)}')", :class => "button addfieldbutton" %>
        <%= link_to "Create a new field", new_observation_field_path, :id => "createfieldbutton", :class => "button" %>
      </div>
    </div>
  </fieldset>

  <div class="buttons">
    <%= f.submit project.new_record? ? "Create" : "Save", :class => "default button", "data-loading-click" => "Saving..." %>
    <%= link_to "Cancel", projects_path, :class => "button" %>
    <% if @project_user && @project_user.is_admin? && !project.new_record? -%>
      <%= link_to "Delete this project", project, :method => :delete, 
        :confirm => "Are you sure you want to delete this project?",
        :class => "minor delete button" %>
    <% end -%>
  </div>
<% end %>
