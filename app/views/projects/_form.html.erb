<%- content_for(:extracss) do -%>
  <%= stylesheet_link_tag "jquery/plugins/jquery.autocomplete.css", "projects/form" %>
<%- end -%>
<%- content_for(:extrajs) do -%>
  <%= google_maps_js %>
  <script type="text/javascript">
    var PROJECT = <%= @project.to_json.html_safe %>,
        RULE_PLACE = <%= @project.rule_place.to_json.html_safe %>,
        PLACE = <%= @project.place.to_json(:methods => [:kml_url]).html_safe %>,
        PLACE_GEOMETRY_KML_URL = <%=raw @place_geometry ? place_geometry_kml_url.inspect : nil.to_json %>,
        KML_ASSET_URLS = <%= @kml_assets ? @kml_assets.map{|a| root_url.gsub(/\/$/, "") + a.asset.url}.inspect.html_safe : "[]" %>
  </script>
  <%= javascript_include_tag "observations/observation_fields",
                             'inaturalist/map3',
                             "jquery/plugins/jquery.latLonSelector.js",
                             "projects/form" %>
<%- end -%>
<%- project ||= @project -%>
<%= form_for project, :builder => DefaultFormBuilder, :html => {:multipart => true} do |f| %>
  <%= f.error_messages %>

  <%= f.text_field :title, :required => true %>
  
  <div id="icon_fields">
    <%= f.form_field :project_icon, :label => "#{t(:project_icon)} (PNG, JPG, or GIF)", :description => t('views.projects.edit.icon_desc'), :wrapper => {:class => 'clear'} do %>
      <% if project.icon.file? -%>
        <%= image_tag(project.icon.url(:thumb), :class => "left") %>
        <div>
          <%= check_box_tag :icon_delete %>
          <label for="icon_delete"><%=t :delete_icon? %></label>
        </div>
        <%= link_to_toggle t(:change_icon), "#iconfield" %>
        <div id="iconfield" style="display: none">
          <%= f.file_field :icon, :label => false, :accept => "image/jpg,image/jpeg,image/png,image/gif" %>
        </div>
      <% else %>
        <%= f.file_field :icon, :label => false, :size => 20, :accept => "image/jpg,image/jpeg,image/png,image/gif" %>
      <% end -%>
    <% end %>

    <%= f.form_field :project_cover, :label => "#{t(:project_cover)} (PNG, JPG, or GIF)", :description => t('views.projects.edit.cover_desc'), :wrapper => {:class => 'clear'} do %>
      <% if project.cover.file? -%>
        <%= image_tag(project.cover.url, :class => "left", :style => "max-width:200px") %>
        <div>
          <%= check_box_tag :cover_delete %>
          <label for="cover_delete"><%=t :delete_cover? %></label>
        </div>
        <%= link_to_toggle t(:change_cover), "#coverfield" %>
        <div id="coverfield" style="display: none">
          <%= f.file_field :cover, :label => false, :accept => "image/jpg,image/jpeg,image/png" %>
        </div>
      <% else %>
        <%= f.file_field :cover, :label => false, :size => 20, :accept => "image/jpg,image/jpeg,image/png" %>
      <% end -%>
    <% end %>
  </div>

  
  <%= f.text_area :description, :description => t(:describe_purpose) %>
  <%= f.text_area :terms, :description => t(:terms_new_users) %>

  <div class="clear">
    <%= f.select :project_type, Project::PROJECT_TYPES.map{|type| [t("#{type.gsub(" ", "_")}", :default => type), type]}, {:include_blank => t(:normal)},
      :description => t(:contest_projects_description) %>
    <%= f.check_box :prefers_count_from_list,
        :label => t(:show_total_listed_taxa),
        :label_after => true,
        :description => t(:show_the_total_number_of) %>
    <%# ?????????? this shouldn't be a checkbox %>
    <%= #f.check_box :prefers_count_leaves, :label => t(:count_by_leaves), :label_after => true, :description => t(:count_listed_taxa_by) %>
    <%# ?????? Something like this maybe? %>
    <%= f.select :count_by, {species: "species", leaves: "leaves", all: "all"}, {:include_blank => t(:normal)},
    <%# /?????????? %>
  </div>

  <fieldset id="bioblitz" style="<%= "display:none;" unless @project.project_type == Project::BIOBLITZ_TYPE %>">
    <legend>
      <%=t :bioblitz %>
      <%= helptip "&nbsp;".html_safe do %>
        <%= t('views.projects.edit.bioblitz_desc_html') %>
        <%=t 'views.projects.show.bioblitz_results_desc_html' %>
      <% end -%>
    </legend>
    <%= f.datetime_select :start_time, :include_blank => true, :description => t('views.projects.edit.start_time_desc'), :required => true %>
    <%= f.datetime_select :end_time, :include_blank => true, 
      :description => t('views.projects.edit.end_time_desc'), :required => true %>
    <%= f.text_field :event_url, :label => t(:event_registration_url), :placeholder => t(:event_url, :default => "Event URL"), :description => t('views.projects.edit.event_url_desc') %>
  </fieldset>

  <fieldset class="location">
    <legend><%= t :location %></legend>
    <p class="description">
      <%= t :if_your_project_is %>
    </p>
    <div class="column span-7">
      <%= f.text_field :latitude, :label => t(:latitude) %>
      <%= f.text_field :longitude, :label => t(:longitude)%>
      <%= f.select :map_type, Project::MAP_TYPES.map{|type| [t("#{type}", :default => type).downcase, type]} %>
      <%= f.text_field :zoom_level %>
      <%= f.text_field :place_id, :placeholder => t(:start_typing_place_name), :label => t(:site_name_place, :site_name => SITE_NAME) %>
      <% if @place -%>
        <%= link_to t(:view_place), @place, :class => "readmore", :target => "_blank" %>
      <% end -%>
      <div class="upstacked stacked">
        <label><%=t :not_finding_place_you_want? %></label>
        <div class="meta"><%=t 'views.projects.edit.bioblitz_create_a_new_place_html', :link => link_to(t(:create_a_new_place), new_place_path(:anchor => "manual"), :target => "_blank") %></div>
      </div>
      <%= f.check_box :prefers_place_boundary_visible, :label_after => true, :description => t(:you_can_show_the_boundary_of) %>
    </div>
    <div class="last column span-16">
      <div class="stacked">
        <%= text_field_tag :map_search, "", :placeholder => t(:search_the_map), :class => "text" %>
      </div>
      <div id="map"></div>
    </div>
  </fieldset>

  <!-- <fieldset class="userrules">
    <legend><%= t(:new_user_rules) %></legend>
    
    <%= f.fields_for :project_user_rules do |pu| %>
      <div>
        <%= pu.select :operator, ProjectUser::RULE_METHODS, :include_blank => t(:choose_rule) %>
        <%= pu.hidden_field :_destroy, :class => "destroyer" %>
        <%= link_to_function t(:remove), "$(this).parent().fadeTo('fast', 0.5); $(this).parent().find('.destroyer').val(true)" %>
      </div>
    <% end %>
    <%= f.fields_for :project_user_rules, [Rule.new] do |pu| %>
      <div>
        <%= pu.select :operator, ProjectUser::RULE_METHODS, :include_blank => t(:choose_rule) %>
        <%= link_to_function t(:add_another), "$(this).parent().clone().appendTo($(this).parents('fieldset'))" %>
      </div>
    <% end %>
  </fieldset> -->

  <% if project.place %>
    <fieldset class="unobserved-listings">
      <legend>Unobserved Listings</legend>
      <p class="description">
        Select how unobserved listings are displayed
      </p>
      <%= f.radio_button("show_from_place", false, { checked: !project.show_from_place.present?, label: t(:display_listings_added_by_curators), :label_after => true})%>
      <%= f.radio_button("show_from_place", true, { checked: project.show_from_place.present?, label: t(:display_listings_from_place), :label_after => true})%>
    </fieldset>
  <% end %>
  <fieldset class="observationrules">
    <legend><%= t(:observation_rules).titleize %></legend>
    <p class="description">
      <%= raw t(:observation_rules_description, :site_name => SITE_NAME_SHORT) %>
    </p>

    <ul>
      <%= f.fields_for :project_observation_rules do |por| %>
        <li>
          <%= por.object.terms %>
          <%= por.hidden_field :_destroy, :class => "destroyer" %>
          <%= link_to_function t(:remove),
            "$(this).parent().fadeTo('fast', 0.5).css('text-decoration', 'line-through');" +
            "$(this).parent().find('.destroyer').val(true)" %>
        </li>
      <% end %>
    </ul>

    <%- new_rule_field = capture do %>
      <fieldset id="new_project_observation_rule">
        <%= f.fields_for :project_observation_rules, [Rule.new] do |pu| %>
          <%= pu.select :operator, ProjectObservation::RULE_METHODS.map{|m| [t("#{m}").to_s.humanize.gsub('?', '').downcase, m]},
            :include_blank => t(:choose_rule),
            :label => t(:rule_must_be) %>
          <%= pu.hidden_field :operand_type, :id => "new_operand_type" %>
          <div id="place_selector">
            <%= pu.text_field :operand_id, :id => "new_operand_id", :placeholder => t(:type_place_name), :label => t(:choose_a_place) %>
            <span class="description">
              <%=t :place_must_have_a_boundary_defined %> <%=t :not_finding_place_you_want? %>
              <%= link_to t(:make_a_new_place), new_place_path, :class => "readmore", :target => "_blank" %>
            </span>
          </div>
          <div id="taxon_selector">
            <label for="taxon_q"><%=t :choose_taxon %></label><br/>
            <input type="text" name="taxon_q" value="" id="taxon_q" class="text">
          </div>
        <% end %>
        <%= link_to_function t(:remove), "$(this).parent().next('a').show();$(this).parent().remove() " %>
      </fieldset>
    <% end -%>
    <%= link_to_function t(:add_new_rule), "$(this).before('#{escape_javascript new_rule_field}'); rulify(); $(this).hide()" %>
  </fieldset>

  <%= f.text_field :tracking_codes, :description => t(:comma_separated_list_of_tracking_codes, :root_url => root_url, :project_id => @project.id) %>

  <% if (current_user.is_admin? || (@project.editable_by?(current_user) && @project.trusted)) && !@project.new_record? -%>
    <fieldset id="project_assets">
      <legend><%=t :project_assets %></legend>
      <%=t 'views.projects.edit.project_assets_desc_html' %>
      <ul>
        <% for project_asset in @project.project_assets %>
        <li>
          <%= link_to project_asset.asset.url, project_asset.asset.url %>
          <small style="margin-left: 10px">
            <%= link_to t(:edit), edit_project_asset_path(project_asset) %>
            <%= link_to t(:delete), project_asset, :method => :delete, :confirm => t(:you_sure_delete_asset?),
              :class => 'description' %>
          </small>
        </li>
        <% end %>
      </ul>

      <%= link_to t(:add_asset), new_project_asset_path(:project_id => @project.id), :class => "readmore", :target => "_blank" %>
    </fieldset>

    <fieldset id="custom_project_fields">
      <legend><%=t :custom_project_fields %></legend>
      <p class="description"><%= t('views.projects.edit.custom_project_fields_means') %></p>
      <% if @project.custom_project -%>
        <%= link_to t(:edit_custom_project_fields), edit_custom_project_path(@project.custom_project), :class => "readmore", :target => "_blank" %>
      <% else %>
        <%= link_to t(:add_custom_project_fields), new_custom_project_path(:project_id => @project.id), :class => "readmore", :target => "_blank" %>
      <% end -%>
    </fieldset>

    <% if current_user.is_admin? && !@project.new_record? -%>
        <fieldset class="admin">
          <legend><%= t :extra_properties %></legend>

          <%= f.check_box :featured_at,
            :label => t(:feature_this_project),
            :label_after => true %>
          <%= f.text_field :group,
            :label => t(:project_group_label),
            :description => t(:project_group_description) %>
          <%= f.text_field :source_url, :description => t(:url_identifier_of_a_project_derived_from) %>

          <%= f.check_box :trusted,
                        :label => t(:trusted_project?),
                        :label_after => true, :description => t('views.projects.edit.trusted_project_means') %>
        </fieldset>
    <%- end %>
  <% end -%>

  <fieldset>
    <legend><%= t :observation_fields %></legend>
    <p class="description">
      <%= t :suggest_or_require_that %>
    </p>

    <ul class="project_observation_fields">
      <%= f.fields_for :project_observation_fields do |pof| %>
        <%= render 'project_observation_field_row', :builder => pof %>
      <% end -%>
    </ul>
    <div>
      <%- new_pof_fields = capture do %>
        <%= f.fields_for :project_observation_fields, f.object.project_observation_fields.build do |pof| %>
          <%= render 'project_observation_field_row', :builder => pof %>
        <% end -%>
      <% end -%>
      <div class="inline buttonrow">
        <label><%= t :add_a_field %></label>
        <input name="observation_field"
               class="observation_field_chooser"
               type="text"
               placeholder="<%= t :start_typing_field_name %>"
               data-chooser-default-sources="<%= @observation_fields.to_json %>">
        <%= link_to_function t(:add_a_field), "newProjectObservationField('#{escape_javascript(new_pof_fields)}')", :class => "button addfieldbutton" %>
        <%= link_to t(:create_a_new_field), new_observation_field_path, :id => "createfieldbutton", :class => "button" %>
      </div>
    </div>
  </fieldset>

  <div class="buttons buttonrow">
    <%= f.submit project.new_record? ? t(:create) : t(:save), :class => "default button", "data-loading-click" => t(:saving) %>
    <%= link_to t(:cancel), projects_path, :class => "button" %>
    <% if @project_user && @project_user.is_admin? && !project.new_record? -%>
      <%= link_to t(:delete_project), project, :method => :delete,
        :confirm => t(:you_sure_delete_project?),
        :class => "minor delete button" %>
    <% end -%>
    <span class="inter right">
      <span class="required">* <%= t(:required_field).pluralize %></span>
    </span>
  </div>
<% end %>
