:ruby
  if @taxon
    @taxon.html = render( partial: "taxa/chooser.html.erb", object: @taxon )
  end
  @default_taxa = Taxon::ICONIC_TAXA.map do |taxon|
    taxon.html = render( partial: "taxa/chooser.html.erb", object: taxon )
    taxon
  end
  if @user
    @user.html = render( partial: "users/chooser", object: @user )
  end
  @default_users = User.curators.limit( 10 ).map do |user|
    user.html = render( partial: "users/chooser", object: user )
    user
  end
- content_for( :title ) do
  - @title = t(:tabulate_presence_absence_data_from_trips)
  = strip_tags( @title )
- content_for( :extracss ) do
  = stylesheet_link_tag "autocomplete"
  :css
    form .text { width: 200px; }
- content_for( :extrajs ) do
  :javascript
    window.taxon = #{ json_escape @taxon.to_json( methods: [:html] ).html_safe }
    window.place = #{ json_escape @place.to_json( methods: [:html] ).html_safe }
    window.user = #{ json_escape @user.to_json( methods: [:html] ).html_safe }
    window.defaultTaxa = #{ json_escape @default_taxa.to_json( methods: [:html] ).html_safe }
    window.defaultUsers = #{ json_escape @default_users.to_json( methods: [:html] ).html_safe }
    $( document ).ready( function() {      
      $( "#filters_user_id" ).chooser( {
        queryParam: "q",
        collectionUrl: $( "meta[name='config:inaturalist_api_url']" ).attr( "content" ) + "/search?sources=users",
        resourceUrl: "/people/{{id}}.json",
        chosen: user,
        defaultSources: defaultUsers
      } )
      $( "#filters_place_id" ).chooser( {
        queryParam: "q",
        collectionUrl: "/places/search.json",
        resourceUrl: "/places/{{id}}.json",
        chosen: place
      } )
      $( "#filters_taxon_name" ).taxonAutocomplete( {
        idEl: $( "#filters_taxon_id" ),
        initialSelection: #{ raw @taxon.to_json },
        thumbnail: false,
        bootstrapClear: true
      } );
      
    } )
.container
  .row
    .col-xs-12
      %ul.list-unstyled
        %li
          = link_to t( :back_to_x, :noun => "trips" ), trips_path, :class => "back crumb"
      = link_to t( :json_format ), current_url(:format=>:json), :class => "default button right"
      %h2= @title
  .row
    .col-xs-3
      = form_for :filters, builder: DefaultFormBuilder, html: { method: :get } do |f|
        = f.text_field :taxon_name, placeholder: t(:type_taxon_name), label: t( :taxon )
        = f.hidden_field :taxon_id, value: @taxon ? @taxon.id : nil
        = f.text_field :place_id, value: @place ? @place.id : nil, placeholder: t( :start_typing_place_name ), label: t( :place )
        = f.select :month, [1,2,3,4,5,6,7,8,9,10,11,12], include_blank: t( :any ), selected: @month, label: t( :month )
        = f.select :year, [2019], include_blank: t( :any ), selected: @year, label: t( :year )
        = f.text_field :user_id, value: @user ? @user.id : nil, placeholder: t( :start_typing_someones_name ), label: t( :added_by )
        = f.submit t( :filter ), class: "default button", "data-loading-click": t( :filtering )
        = link_to t( :clear_filters ), tabulate_trips_url, class: "minor button"
    .col-xs-9
      - if @taxon
        - if @trips.empty?
          %p.description= t :no_trips
        - else
          %table{ class: "table table-striped" }
            %thead
              %tr
                %th{ scope: "col" } Trip
                %th{ scope: "col" } Title
                %th{ scope: "col" } User
                %th{ scope: "col" } Latitude
                %th{ scope: "col" } Longitude
                %th{ scope: "col" } Date
                %th{ scope: "col" } Duration(min)
                %th{ scope: "col" } Distance(m)
                %th{ scope: "col" } #Observers
                %th{ scope: "col" }=@taxon.name
            %tbody
              - for trip in @trips
                %tr
                  %th{ scope: "row" }
                    =link_to trip.id, trip_path( trip )
                  %td
                    =trip.title.truncate( 15 )
                  %td
                    =link_to trip.user.login.truncate( 15 ), user_path( trip.user_id ) if trip.user_id
                  %td
                    =trip.latitude.round( 3 ) if trip.latitude
                  %td
                    =trip.longitude.round( 3 ) if trip.longitude
                  %td
                    =trip.start_time.strftime( "%m/%d/%Y" )
                  %td
                    =(( trip.stop_time - trip.start_time ) / 1.minutes ).to_i
                  %td
                    =trip.distance.to_i if trip.distance
                  %td
                    =trip.number
                  %td
                    =@occupancy[trip.id]
          = will_paginate @trips
      - else
        %p.description= t :please_enter_a_species