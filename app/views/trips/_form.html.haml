= content_for :extracss do
  = stylesheet_link_tag "trips/form"
= content_for :extrajs do
  = javascript_include_tag 'jquery/plugins/jquery.labelize', 
                           'jquery/plugins/jquery.dataTables.min', 
                           "jquery/plugins/inat/datepicker.js",
                           "jquery/plugins/jquery.latLonSelector.js",
                           "jquery/plugins/jquery-ui-timepicker-addon.min",
                           "trips/form"
  :javascript
    $( document ).ready( function() {
      $( '[data-toggle="popover"]' ).popover({html:true});
    } );
= form_for @trip, :builder => BootstrapFormBuilder, :html => {:class => 'trip_form'} do |f|
  = error_messages_for @trip
  .row
    .col-md-6
      = f.text_field :title
      = f.text_area :body, class: "form-control", label: t(:description), placeholder: t(:describe_your_trip, default: "Describe your trip!" )
      .row
        .col-md-6= f.text_field :distance, :label => t( :distance_traveled )
        .col-md-6= f.text_field :number, :label => t( :number_of_observers )
      %h3=t :when_did_you_go?
      .row
        .col-md-6= f.text_field :start_time, :value => (@trip.start_time || Chronic.parse("today at 9am")).strftime("%Y-%m-%d %H:%M %z"), :label => t(:start_time), :placeholder => t(:start_time, :default => "Start time")
        .col-md-6= f.text_field :stop_time, :value => (@trip.stop_time || Chronic.parse("today at 5pm")).strftime("%Y-%m-%d %H:%M %z"), :label => t(:end_time), :placeholder => t(:end_time, :default => "End time")
    #location.col-md-6
      %h3=t :where_did_you_go?
      .stacked
        = f.text_field :place_id, :class => "form-control", :label => t(:set_the_coordinates_by_choosing_a_place), :placeholder => t(:start_typing_place_name)
      .stacked
        %label=t :or_by_searching_the_map
        = text_field_tag :location, '', :class => "form-control", :placeholder => "Search the map"
      .map.stacked
      .coordinates.row
        .col-md-4= f.text_field :latitude, :label => t(:lat), :class => "form-control"
        .col-md-4= f.text_field :longitude, :label => t(:lon), :class => "form-control"
        .col-md-4= f.text_field :radius, :label => t(:radius), :class => "form-control"
  #trip_purposes_row.row
    .col-md-12
      %h3=t :what_were_you_looking_for?
      .bg-warning= t(:target_list_warning)
      .row
        .col-md-6
          %h4 Choose from existing high level groups, for example
          %ul#goal_taxa.plain.taxon_links
            - @target_taxa.each do |iconic_taxon|
              %li.checkbox
                %label{:for => iconic_taxon.name.underscore}
                  = check_box_tag iconic_taxon.name.underscore, iconic_taxon.name.underscore, @trip.trip_purposes.any?{|tp| puts "tp.resource_id: #{tp.resource_id.class}, iconic_taxon.id: #{iconic_taxon.id.class}"; tp.resource_id == iconic_taxon.id}, :data => {:taxon => iconic_taxon.as_json(:methods => [:html])}
                  = render "shared/taxon", :taxon => iconic_taxon
        .col-md-6
          %h4 or choose something else / more specific (from high level groups down to species)
          #trip_purposes.stacked.clearfix.taxon_links
            = f.fields_for :trip_purposes do |tp|
              = render "trip_purpose_fields", :f => tp
          .hide
            = link_to_add_association t(:add_trip_purpose), f, :trip_purposes, "data-association-insertion-method" => "append", "data-association-insertion-node" => "#trip_purposes", :class => "btn btn-sm btn-success"
          = text_field_tag :new_goal_taxon, '', :class => 'col-md-4', :placeholder => t(:start_typing_taxon_name)
  / #trip_users_row.row.stacked
  /   .col-md-12
  /     %h3=t :who_were_you_with?
  #actions.row.upstacked
    .col-md-12
      - if @trip.published?
        = f.submit t(:save_trip), :class => "btn btn-primary"
        = f.submit t(:unpublish), :class => "btn btn-default", :name => "unpublish"
      - else
        = f.submit t(:publish), data: ( @first_trip  ? { confirm: t(:target_list_alert) } : nil ), class: "btn btn-primary", name: "publish"
        = f.submit t(:save), data: ( @first_trip  ?  { confirm: t(:target_list_alert) } : nil ), class: "btn btn-default"
      = link_to t(:cancel), :back, class: "btn btn-default"
      = link_to t(:delete), @trip, :method => :delete, data: { confirm: t( :are_you_sure? ) }, class: "btn btn-danger pull-right"
