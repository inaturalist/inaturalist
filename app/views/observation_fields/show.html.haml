- content_for(:title) do
  = @title = t(:observation_field)+": #{@observation_field.name}"
- content_for(:extracss) do
  :css
    td.observations {width:80%;}
    td.observations.mini .observation {border-bottom: 0 transparent;}
    #allowed_values .extra {display:none;}
- content_for(:extrajs) do
  :javascript
    $(document).ready(function() {
      $('[class*=bold-]').boldId()
    })
#pageheader.column.span-24
  #nav.clear
    .breadcrumbs
      - if @observation_field.editable_by?(current_user)
        %span.right
          = link_to 'Edit field', edit_observation_field_path(@observation_field), :class => "ui description"
      = link_to t(:back_to_observation_fields), observation_fields_path, :class => 'back crumb'
  %h2= @title
- unless @observation_field.description.blank?
  %p.description= h @observation_field.description
.stacked
  .meta.ui
    %b
      = t :datatype
      \:
    = h @observation_field.datatype
  - unless @observation_field.allowed_values.blank?
    .meta.ui
      %b Allowed values:
      - allowed_values = @observation_field.allowed_values.split('|')
      - if allowed_values.size <= 10
        = @observation_field.allowed_values.split('|').join(', ')
      - else
        %ul#allowed_values
          - allowed_values.each_with_index do |v,i|
            %li{:class => i >= 15 ? 'extra' : ''}= v
          - if allowed_values.size > 15
            %li= link_to_function "View all", "$('#allowed_values .extra').show(); $(this).parents('li:first').hide()"
  .meta.ui
    %b
      = t :created_by, gender: 'observation_field'
      \:
    = link_to user_image(@observation_field.user), @observation_field.user
    = link_to_user @observation_field.user
- if @observation_field.allowed_values.to_s.size > 0
  .right.meta
    %strong Values:
    - if @observation_field.allowed_values.size < 10
      :ruby
        vals = @observation_field.allowed_values.split('|').unshift("any").map do |v|
          if @value == v
            "<strong>#{v}</strong>"
          else
            link_to v, url_for(:value => v)
          end
        end.join(' | ')
      = vals.html_safe
    - else
      = form_tag url_for, :class => "inline", :method => :get do
        = hidden_fields_for_params(:without => [:value, :utf8])
        = select_tag :value, options_for_select(@observation_field.allowed_values.split('|').unshift("any"), params[:value] || "any"), |
          "data-autosubmit" => true                                                                                                    |
%h3
  = t :observations_specifying_this_field
  - if @value != "any"
    with "#{@value}"
- if @observations.blank?
  .meta.noresults
    = t :no_observations_yet
- else
  %table{:width => "100%"}
    %tr
      %th= t :observation
      %th= @observation_field.name
    - for ofv in @observation_field_values
      %tr
        %td.mini.observations
          = render "observations/cached_component", :observation => ofv.observation
        %td
          = observation_field_value_for(ofv)
  = link_to "View more search options",                                                                  |
    observations_path("field:#{@observation_field.normalized_name(escape: true)}" => (@value == 'any' ? '' : @value)), |
    :rel => "nofollow",                                                                                  |
    :class => "readmore"                                                                                 |
= will_paginate @observation_field_values
= separator
- unless @projects.blank?
  %h3=t :projects_using_this_field
  .column.span-24
    - @projects.each_with_index do |project, i|
      = render :partial => 'projects/project', :object => project, :locals => {:last => i % 3 == 2}
      - if i % 3 == 2
        .clear.stacked &nbsp;
.column.span-12
  = render :partial => "comments/comments", :object => @observation_field
