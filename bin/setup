#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

USING_DOCKER = File.exist?( "./docker-compose.override.yml" )

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts "== Installing dependencies =="
  system "gem install bundler --conservative", exception: true
  system "bundle", exception: true

  puts "\n== Copying sample files =="
  unless File.exist?("config/config.yml")
    system "cp config/config.yml.example config/config.yml", exception: true
  end
  unless File.exist?("config/database.yml")
    system "cp config/database.yml.example config/database.yml", exception: true
  end
  unless File.exist?("config/secrets.yml")
    system "cp config/secrets.yml.example config/secrets.yml", exception: true
  end
  unless File.exist?("config/smtp.yml")
    system "cp config/smtp.yml.example config/smtp.yml", exception: true
  end

  puts "\n== Creating Template Database =="
  if system "command -v createdb > /dev/null"
    if USING_DOCKER
      puts "docker-compose.override.yml exists, assuming you're using Docker and the template db already exists"
    else
      system "createdb template_postgis", exception: true
      system "psql -d template_postgis -c 'create extension postgis'", exception: true
      system "psql -d template_postgis -c 'create extension \"uuid-ossp\"'", exception: true
      set_template_cmd = <<~STRING
        psql template_postgis -c \
        "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template_postgis'"
      STRING
      system set_template_cmd, exception: true
    end
  else
    puts "\nError: PostgreSQL needs to be installed before setup can be completed."
    abort
  end

  puts "\n== Preparing database =="
  system "bundle exec rake db:reset", exception: true

  puts "\n== Removing old logs and tempfiles =="
  system "rm -f log/*", exception: true
  system "rm -rf tmp/cache", exception: true

  puts "\n== Building the elasticsearch index =="
  system "bundle exec rake es:rebuild"

  puts "\n== Load source records for citation =="
  system "bundle exec rails r tools/load_sources.rb", exception: true
  puts "\n== Load the basic iconic taxa to get the taxonomy started =="
  system "bundle exec rails r tools/load_iconic_taxa.rb", exception: true
  puts "\n== Load controlled terms from the API =="
  system "bundle exec rails r tools/load_production_controlled_terms.rb"
  puts "\n== Generate translation files =="
  system "bundle exec rake inaturalist:generate_translations_js", exception: true

  puts "\n== Restarting application server =="
  system "mkdir -p tmp", exception: true
  system "touch tmp/restart.txt", exception: true
end
