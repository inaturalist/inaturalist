#!/usr/bin/env ruby
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts "== Installing dependencies =="
  system "gem install bundler --conservative"
  system "bundle check || bundle install"

  puts "\n== Copying sample files =="
  unless File.exist?("config/config.yml")
    system "cp config/config.yml.example config/config.yml"
  end
  unless File.exist?("config/database.yml")
    system "cp config/database.yml.example config/database.yml"
  end
  unless File.exist?("config/secrets.yml")
    system "cp config/secrets.yml.example config/secrets.yml"
  end
  unless File.exist?("config/smtp.yml")
    system "cp config/smtp.yml.example config/smtp.yml"
  end

  puts "\n== Creating Template Database =="
  if system "command -v createdb > /dev/null"
    system "createdb template_postgis"
    system "psql -d template_postgis -c 'create extension postgis'"
    system "psql -d template_postgis -c 'create extension \"uuid-ossp\"'"
    system <<~STRING
      psql template_postgis -c \
      "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template_postgis'"
    STRING
  else
    puts "\nError: PostgreSQL needs to be installed before setup can be completed."
    abort
  end

  puts "\n== Preparing database =="
  system "bundle exec rake db:setup"

  puts "\n== Removing old logs and tempfiles =="
  system "rm -f log/*"
  system "rm -rf tmp/cache"

  puts "\n== Restarting application server =="
  system "touch tmp/restart.txt"
end
